{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.51.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "dred-network-registry!",
  "docComment": "",
  "name": "dred-network-registry",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "dred-network-registry!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AbstractSettingsForNeighborhood:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AbstractSettingsForNeighborhood = "
            },
            {
              "kind": "Content",
              "text": "{\n    NeighborhoodSettings: "
            },
            {
              "kind": "Reference",
              "text": "NeighborhoodSettings",
              "canonicalReference": "dred-network-registry!~NeighborhoodSettings_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AbstractSettingsForNeighborhood",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AbstractSettingsForNeighborhoodLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AbstractSettingsForNeighborhoodLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    NeighborhoodSettings: "
            },
            {
              "kind": "Reference",
              "text": "NeighborhoodSettingsLike",
              "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AbstractSettingsForNeighborhoodLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!AbstractSettingsForNodeOperator:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AbstractSettingsForNodeOperator = "
            },
            {
              "kind": "Content",
              "text": "{\n    nodeOpSettings: "
            },
            {
              "kind": "Reference",
              "text": "NodeOperatorSettings",
              "canonicalReference": "dred-network-registry!NodeOperatorSettings:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AbstractSettingsForNodeOperator",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!AbstractSettingsForNodeOperatorLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AbstractSettingsForNodeOperatorLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    nodeOpSettings: "
            },
            {
              "kind": "Reference",
              "text": "NodeOperatorSettingsLike",
              "canonicalReference": "dred-network-registry!NodeOperatorSettingsLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AbstractSettingsForNodeOperatorLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ActivityDelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ActivityDelegateRoleHelperNested_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!DelegateRole:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ActivityDelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ActivityDelegateRoleHelperNested_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ActivityDelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ActivityDelegateRoleHelperNested_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_5:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ActivityDelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ActivityDelegateRoleHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AnyData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyData = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AnyData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AnyData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyData = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AnyData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AnyData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyData = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AnyData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!AnyData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyData = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AnyData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AnyDataLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AnyDataLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AnyDataLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AnyDataLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AnyDataLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AnyDataLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!AnyDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AnyDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AppInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AppInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    url: string;\n    revenueModel: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RevenueModel",
              "canonicalReference": "dred-network-registry!~RevenueModel:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AppInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~AppInfoLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AppInfoLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    url: string;\n    revenueModel: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RevenueModelLike",
              "canonicalReference": "dred-network-registry!~RevenueModelLike:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "AppInfoLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~BurningActivity_2:type",
          "docComment": "/**\n * BurningActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    _placeholder1BA: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~BurningActivity_3:type",
          "docComment": "/**\n * BurningActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    DeletingRecord: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~BurningActivity_4:type",
          "docComment": "/**\n * BurningActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    DeletingRecord: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!BurningActivity:type",
          "docComment": "/**\n * BurningActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    DeletingRecord: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~BurningActivityHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~BurningActivityHelper_2#DeletingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"DredNodeRegistryPolicy::BurningActivity.DeletingRecord\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~BurningActivityHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~BurningActivityHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~BurningActivityHelper_3#DeletingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodPolicy::BurningActivity.DeletingRecord\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~BurningActivityHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~BurningActivityHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~BurningActivityHelper_4#DeletingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"ProtocolSettingsPolicy::BurningActivity.DeletingRecord\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~BurningActivityHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~BurningActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~BurningActivityHelper#_placeholder1BA:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MyMintSpendDelegate::BurningActivity._placeholder1BA\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_placeholder1BA(recId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "recId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "_placeholder1BA"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~BurningActivityHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        _placeholder1BA: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        _placeholder1BA: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelperNested_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_2#DeletingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::BurningActivity.DeletingRecord\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelperNested_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_3#DeletingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::BurningActivity.DeletingRecord\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelperNested_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_4#DeletingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::BurningActivity.DeletingRecord\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        DeletingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~BurningActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~BurningActivityHelperNested#_placeholder1BA:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::BurningActivity._placeholder1BA\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_placeholder1BA(recId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "recId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "_placeholder1BA"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~BurningActivityHelperNested#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        _placeholder1BA: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        _placeholder1BA: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~BurningActivityLike_2:type",
          "docComment": "/**\n * BurningActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    _placeholder1BA: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivityLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~BurningActivityLike_3:type",
          "docComment": "/**\n * BurningActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    DeletingRecord: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivityLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~BurningActivityLike_4:type",
          "docComment": "/**\n * BurningActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    DeletingRecord: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivityLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!BurningActivityLike:type",
          "docComment": "/**\n * BurningActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    DeletingRecord: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!BurningActivityMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivityMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"DredNodeRegistryPolicy\";\n    enumName: \"BurningActivity\";\n}, {\n    DeletingRecord: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BurningActivityMeta",
              "canonicalReference": "dred-network-registry!BurningActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"DeletingRecord\", \"Constr#0\", \"singletonField\", /* implied wrapper { id: ... } for singleVariantField */ number[], \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "BurningActivityMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoCtx_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoCtx = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoCtx_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoCtx_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoCtx = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoCtx_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoCtx_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoCtx = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoCtx_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoCtx:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoCtx = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoCtx",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoCtxLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoCtxLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputTypeLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoCtxLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoCtxLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoCtxLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputTypeLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoCtxLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoCtxLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoCtxLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputTypeLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoCtxLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoCtxLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoCtxLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputTypeLike",
              "canonicalReference": "dred-network-registry!cctx_CharterInputTypeLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoCtxLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CapoManifestEntry",
              "canonicalReference": "dred-network-registry!~CapoManifestEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CapoManifestEntry",
              "canonicalReference": "dred-network-registry!~CapoManifestEntry_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CapoManifestEntry",
              "canonicalReference": "dred-network-registry!~CapoManifestEntry_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoDatum$CharterData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CapoManifestEntry",
              "canonicalReference": "dred-network-registry!CapoManifestEntry:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange",
              "canonicalReference": "dred-network-registry!PendingCharterChange:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$CharterDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CapoManifestEntryLike",
              "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChangeLike",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeLike_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterDataLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$CharterDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CapoManifestEntryLike",
              "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChangeLike",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeLike_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterDataLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$CharterDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CapoManifestEntryLike",
              "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChangeLike",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeLike_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterDataLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoDatum$CharterDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$CharterDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CapoManifestEntryLike",
              "canonicalReference": "dred-network-registry!CapoManifestEntryLike:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChangeLike",
              "canonicalReference": "dred-network-registry!PendingCharterChangeLike:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$Ergo$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoManifestEntry",
              "canonicalReference": "dred-network-registry!~ErgoCapoManifestEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingCharterChange",
              "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$Ergo$CharterData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$Ergo$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoManifestEntry",
              "canonicalReference": "dred-network-registry!~ErgoCapoManifestEntry_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingCharterChange",
              "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$Ergo$CharterData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$Ergo$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoManifestEntry",
              "canonicalReference": "dred-network-registry!~ErgoCapoManifestEntry_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingCharterChange",
              "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$Ergo$CharterData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$Ergo$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoManifestEntry",
              "canonicalReference": "dred-network-registry!~ErgoCapoManifestEntry_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingCharterChange",
              "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$Ergo$CharterData_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoDatum$Ergo$CharterData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$Ergo$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoManifestEntry",
              "canonicalReference": "dred-network-registry!ErgoCapoManifestEntry:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingCharterChange",
              "canonicalReference": "dred-network-registry!ErgoPendingCharterChange:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$Ergo$CharterData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_2:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!~ManifestActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_3:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!~ManifestActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_4:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!~ManifestActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!DelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!ManifestActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$CreatingDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegate_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$CreatingDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegate_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$CreatingDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegate_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegate:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$CreatingDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$CreatingDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegateLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$CreatingDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegateLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$CreatingDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegateLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegateLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$CreatingDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegateLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$CreatingDelegate_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$CreatingDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$CreatingDelegate_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$CreatingDelegate_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$CreatingDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$CreatingDelegate_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$CreatingDelegate_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$CreatingDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$CreatingDelegate_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$Ergo$CreatingDelegate:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$CreatingDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$CreatingDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewMintDelegate_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewMintDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewMintDelegate_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewMintDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewMintDelegate_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewMintDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$Ergo$forcingNewMintDelegate:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewMintDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewSpendDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewSpendDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewSpendDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$Ergo$forcingNewSpendDelegate:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewSpendDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewMintDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegate_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewMintDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegate_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegate_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewMintDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegate_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegate:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewMintDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewMintDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegateLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewMintDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegateLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewMintDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegateLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegateLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewMintDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegateLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewSpendDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegate_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewSpendDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegate_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegate_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewSpendDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegate_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegate:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewSpendDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewSpendDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegateLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewSpendDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegateLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewSpendDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegateLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegateLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$forcingNewSpendDelegateLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelperNested",
                  "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        queuePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        removePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        commitPendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewSpendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewMintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        updatingManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!ManifestActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 21
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelperNested",
                  "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        queuePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        removePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        commitPendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewSpendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewMintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        updatingManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 21
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelperNested",
                  "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        queuePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        removePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        commitPendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewSpendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewMintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        updatingManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 21
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelperNested",
                  "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        queuePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        removePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        commitPendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewSpendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewMintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        updatingManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 21
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelperNested_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "ActivityDelegateRoleHelperNested",
                  "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        queuePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        removePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        commitPendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewSpendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewMintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegateLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        updatingManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!ManifestActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 21
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelperNested_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "ActivityDelegateRoleHelperNested",
                  "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        queuePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        removePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        commitPendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewSpendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewMintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        updatingManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 21
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelperNested_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "ActivityDelegateRoleHelperNested",
                  "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        queuePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        removePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        commitPendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewSpendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewMintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        updatingManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 21
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "ActivityDelegateRoleHelperNested",
                  "canonicalReference": "dred-network-registry!~ActivityDelegateRoleHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        queuePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        removePendingChange: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        commitPendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewSpendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forcingNewMintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        updatingManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 21
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityLike_2:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "dred-network-registry!~ManifestActivityLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivityLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityLike_3:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "dred-network-registry!~ManifestActivityLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivityLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoLifecycleActivityLike_4:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$CreatingDelegateLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewSpendDelegateLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$forcingNewMintDelegateLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "dred-network-registry!~ManifestActivityLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivityLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivityLike:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegateLike",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegateLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegateLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegateLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "dred-network-registry!ManifestActivityLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoLifecycleActivityMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivityMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoDelegateHelpers\";\n    enumName: \"CapoLifecycleActivity\";\n}, {\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"CreatingDelegate\", \"Constr#0\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$CreatingDelegate:type"
            },
            {
              "kind": "Content",
              "text": ", \"isSeededActivity\">;\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"queuePendingChange\", \"Constr#1\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"removePendingChange\", \"Constr#2\", \"singletonField\", /* implied wrapper { role: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!DelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"commitPendingChanges\", \"Constr#3\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"forcingNewSpendDelegate\", \"Constr#4\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewSpendDelegate:type"
            },
            {
              "kind": "Content",
              "text": ", \"isSeededActivity\">;\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"forcingNewMintDelegate\", \"Constr#5\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$forcingNewMintDelegate:type"
            },
            {
              "kind": "Content",
              "text": ", \"isSeededActivity\">;\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"updatingManifest\", \"Constr#6\", \"singletonField\", /* implied wrapper { activity: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!ManifestActivity:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivityMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 45
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoManifestEntry_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType",
              "canonicalReference": "dred-network-registry!~ManifestEntryType_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoManifestEntry_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType",
              "canonicalReference": "dred-network-registry!~ManifestEntryType_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntry_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoManifestEntry_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType",
              "canonicalReference": "dred-network-registry!~ManifestEntryType_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntry_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoManifestEntry:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType",
              "canonicalReference": "dred-network-registry!ManifestEntryType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoManifestEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[] | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntryLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoManifestEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[] | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntryLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoManifestEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[] | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntryLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!CapoManifestEntryLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoManifestEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeLike",
              "canonicalReference": "dred-network-registry!ManifestEntryTypeLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[] | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntryLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType_2:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType = "
            },
            {
              "kind": "Content",
              "text": "{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInput",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInput_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Input",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Input_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType_3:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType = "
            },
            {
              "kind": "Content",
              "text": "{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInput",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInput_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Input",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Input_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType_4:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType = "
            },
            {
              "kind": "Content",
              "text": "{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInput",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInput_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Input",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Input_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputType:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType = "
            },
            {
              "kind": "Content",
              "text": "{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInput",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType$RefInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Input",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType$Input:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$Input_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$Input_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$Input_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$Input_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$Input_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$Input_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputType$Ergo$Input:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "dred-network-registry!CapoDatum$Ergo$CharterData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$Input",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$RefInput_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$RefInput_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$RefInput_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$RefInput_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$RefInput_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$RefInput_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputType$Ergo$RefInput:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "dred-network-registry!CapoDatum$Ergo$CharterData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$RefInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Input_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Input_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Input_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Input_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Input_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Input_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputType$Input:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterData",
              "canonicalReference": "dred-network-registry!CapoDatum$CharterData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Input",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$InputLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$InputLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$InputLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$InputLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$InputLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$InputLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputType$InputLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$InputLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "dred-network-registry!CapoDatum$CharterDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$InputLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInput_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInput_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInput_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInput_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInput_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterData",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInput_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputType$RefInput:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterData",
              "canonicalReference": "dred-network-registry!CapoDatum$CharterData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$RefInputLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInputLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$RefInputLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInputLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$RefInputLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInputLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputType$RefInputLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$RefInputLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "dred-network-registry!CapoDatum$CharterDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInputLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***cctx_CharterInputType*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class cctx_CharterInputTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "cctx_CharterInputTypeHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_2#Input:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.Input\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Input(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "dred-network-registry!cctx_CharterInputType$InputLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "dred-network-registry!CapoDatum$CharterDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Input"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_2#RefInput:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.RefInput\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RefInput(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "dred-network-registry!cctx_CharterInputType$RefInputLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "dred-network-registry!CapoDatum$CharterDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RefInput"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_2#Unk:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::cctx_CharterInputType.Unk\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Unk(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Unk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType",
                  "canonicalReference": "dred-network-registry!cctx_CharterInputType:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Unk: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RefInput: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "dred-network-registry!cctx_CharterInputType$RefInputLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Input: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "dred-network-registry!cctx_CharterInputType$InputLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***cctx_CharterInputType*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class cctx_CharterInputTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "cctx_CharterInputTypeHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_3#Input:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.Input\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Input(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Input"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_3#RefInput:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.RefInput\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RefInput(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RefInput"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_3#Unk:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::cctx_CharterInputType.Unk\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Unk(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Unk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Unk: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RefInput: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Input: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***cctx_CharterInputType*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class cctx_CharterInputTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "cctx_CharterInputTypeHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_4#Input:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.Input\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Input(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Input"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_4#RefInput:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.RefInput\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RefInput(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RefInput"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_4#Unk:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::cctx_CharterInputType.Unk\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Unk(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Unk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Unk: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RefInput: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Input: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***cctx_CharterInputType*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class cctx_CharterInputTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "cctx_CharterInputTypeHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper#Input:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.Input\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Input(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Input"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper#RefInput:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.RefInput\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RefInput(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "dred-network-registry!~CapoDatum$CharterDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RefInput"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper#Unk:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::cctx_CharterInputType.Unk\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Unk(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Unk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Unk: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RefInput: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Input: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_2:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInputLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$InputLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputTypeLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_3:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInputLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$InputLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputTypeLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_4:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInputLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$RefInputLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$InputLike",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$InputLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputTypeLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputTypeLike:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInputLike",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType$RefInputLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$InputLike",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType$InputLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputTypeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!cctx_CharterInputTypeMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputTypeMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoHelpers\";\n    enumName: \"cctx_CharterInputType\";\n}, {\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputTypeMeta",
              "canonicalReference": "dred-network-registry!cctx_CharterInputTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Unk\", \"Constr#0\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputTypeMeta",
              "canonicalReference": "dred-network-registry!cctx_CharterInputTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"RefInput\", \"Constr#1\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInput",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType$RefInput:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputTypeMeta",
              "canonicalReference": "dred-network-registry!cctx_CharterInputTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Input\", \"Constr#2\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Input",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType$Input:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputTypeMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 21
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity_2:type",
          "docComment": "/**\n * DelegateActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **9 variant(s)** of the DelegateActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!~SpendingActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!~MintingActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!~BurningActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity_3:type",
          "docComment": "/**\n * DelegateActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **9 variant(s)** of the DelegateActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!~SpendingActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!~MintingActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!~BurningActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity_4:type",
          "docComment": "/**\n * DelegateActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **9 variant(s)** of the DelegateActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!~SpendingActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!~MintingActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!~BurningActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity:type",
          "docComment": "/**\n * DelegateActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **9 variant(s)** of the DelegateActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!SpendingActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!MintingActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!BurningActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$CreatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$UpdatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$DeletingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$CreatingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dataType: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$CreatingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dataType: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$CreatingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dataType: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$CreatingDelegatedData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$CreatingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dataType: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$CreatingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    dataType: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedDataLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$CreatingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    dataType: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedDataLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$CreatingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    dataType: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedDataLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$CreatingDelegatedDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$CreatingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    dataType: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$DeletingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$DeletingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$DeletingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$DeletingDelegatedData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$DeletingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$DeletingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedDataLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$DeletingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedDataLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$DeletingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedDataLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$DeletingDelegatedDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$DeletingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$CreatingDelegatedData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$CreatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$CreatingDelegatedData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$CreatingDelegatedData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$CreatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$CreatingDelegatedData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$CreatingDelegatedData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$CreatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$CreatingDelegatedData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$Ergo$CreatingDelegatedData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$CreatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$CreatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$CreatingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$DeletingDelegatedData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$DeletingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$DeletingDelegatedData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$DeletingDelegatedData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$DeletingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$DeletingDelegatedData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$DeletingDelegatedData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$DeletingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$DeletingDelegatedData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$Ergo$DeletingDelegatedData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$DeletingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$DeletingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$DeletingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$UpdatingDelegatedData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$UpdatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$UpdatingDelegatedData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$UpdatingDelegatedData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$UpdatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$UpdatingDelegatedData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$UpdatingDelegatedData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$UpdatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$UpdatingDelegatedData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$Ergo$UpdatingDelegatedData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$UpdatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$UpdatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$UpdatingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$UpdatingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$UpdatingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$UpdatingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$UpdatingDelegatedData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$UpdatingDelegatedData = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$UpdatingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedDataLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$UpdatingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedDataLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$UpdatingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedDataLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivity$UpdatingDelegatedDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$UpdatingDelegatedDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataType: string;\n    recId: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateActivityHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#$seeded$CreatingDelegatedData:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::DelegateActivity.CreatingDelegatedData\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegatedData({ dataType })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ dataType: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegatedData: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        dataType: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        dataType: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegatedData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#BurningActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BurningActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BurningActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#CapoLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get CapoLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CapoLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#CreatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::DelegateActivity.CreatingDelegatedData\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegatedData}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#CreatingDelegatedData:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::DelegateActivity.CreatingDelegatedData\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!DelegateActivity$CreatingDelegatedDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#DelegateLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get DelegateLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#DeletingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::DelegateActivity.DeletingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!DelegateActivity$DeletingDelegatedDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#MintingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#MultipleDelegateActivities:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::DelegateActivity.MultipleDelegateActivities\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MultipleDelegateActivities(activities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activities",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MultipleDelegateActivities"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#SpendingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#UpdatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::DelegateActivity.UpdatingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!DelegateActivity$UpdatingDelegatedDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity",
                  "canonicalReference": "dred-network-registry!DelegateActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CapoLifecycleActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityLike",
                  "canonicalReference": "dred-network-registry!CapoLifecycleActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityLike",
                  "canonicalReference": "dred-network-registry!DelegateLifecycleActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityLike",
                  "canonicalReference": "dred-network-registry!SpendingActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityLike",
                  "canonicalReference": "dred-network-registry!MintingActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityLike",
                  "canonicalReference": "dred-network-registry!BurningActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CreatingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!DelegateActivity$CreatingDelegatedDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        UpdatingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!DelegateActivity$UpdatingDelegatedDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DeletingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!DelegateActivity$DeletingDelegatedDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MultipleDelegateActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 27
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateActivityHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#$seeded$CreatingDelegatedData:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::DelegateActivity.CreatingDelegatedData\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegatedData({ dataType })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ dataType: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegatedData: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        dataType: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        dataType: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegatedData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#BurningActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BurningActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BurningActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#CapoLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get CapoLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CapoLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#CreatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::DelegateActivity.CreatingDelegatedData\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegatedData}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#CreatingDelegatedData:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::DelegateActivity.CreatingDelegatedData\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#DelegateLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get DelegateLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#DeletingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::DelegateActivity.DeletingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#MintingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#MultipleDelegateActivities:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::DelegateActivity.MultipleDelegateActivities\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MultipleDelegateActivities(activities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activities",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MultipleDelegateActivities"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#SpendingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#UpdatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::DelegateActivity.UpdatingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity",
                  "canonicalReference": "dred-network-registry!~DelegateActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CapoLifecycleActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityLike",
                  "canonicalReference": "dred-network-registry!~SpendingActivityLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityLike",
                  "canonicalReference": "dred-network-registry!~MintingActivityLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityLike",
                  "canonicalReference": "dred-network-registry!~BurningActivityLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CreatingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        UpdatingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DeletingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MultipleDelegateActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 27
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateActivityHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#$seeded$CreatingDelegatedData:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::DelegateActivity.CreatingDelegatedData\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegatedData({ dataType })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ dataType: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegatedData: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        dataType: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        dataType: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegatedData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#BurningActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BurningActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~BurningActivityHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BurningActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#CapoLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get CapoLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CapoLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#CreatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::DelegateActivity.CreatingDelegatedData\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegatedData}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#CreatingDelegatedData:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::DelegateActivity.CreatingDelegatedData\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#DelegateLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get DelegateLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#DeletingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::DelegateActivity.DeletingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#MintingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#MultipleDelegateActivities:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::DelegateActivity.MultipleDelegateActivities\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MultipleDelegateActivities(activities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activities",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MultipleDelegateActivities"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#SpendingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#UpdatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::DelegateActivity.UpdatingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity",
                  "canonicalReference": "dred-network-registry!~DelegateActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CapoLifecycleActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityLike",
                  "canonicalReference": "dred-network-registry!~SpendingActivityLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityLike",
                  "canonicalReference": "dred-network-registry!~MintingActivityLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityLike",
                  "canonicalReference": "dred-network-registry!~BurningActivityLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CreatingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        UpdatingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DeletingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MultipleDelegateActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 27
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#$seeded$CreatingDelegatedData:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::DelegateActivity.CreatingDelegatedData\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$CreatingDelegatedData({ dataType })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ dataType: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegatedData: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        dataType: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        dataType: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegatedData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#BurningActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BurningActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~BurningActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BurningActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#CapoLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get CapoLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CapoLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#CreatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::DelegateActivity.CreatingDelegatedData\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegatedData}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#CreatingDelegatedData:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::DelegateActivity.CreatingDelegatedData\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#DelegateLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get DelegateLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#DeletingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::DelegateActivity.DeletingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#MintingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~MintingActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#MultipleDelegateActivities:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::DelegateActivity.MultipleDelegateActivities\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MultipleDelegateActivities(activities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activities",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MultipleDelegateActivities"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#SpendingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelperNested",
                  "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#UpdatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::DelegateActivity.UpdatingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateActivityHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity",
                  "canonicalReference": "dred-network-registry!~DelegateActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CapoLifecycleActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityLike",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityLike",
                  "canonicalReference": "dred-network-registry!~SpendingActivityLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityLike",
                  "canonicalReference": "dred-network-registry!~MintingActivityLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityLike",
                  "canonicalReference": "dred-network-registry!~BurningActivityLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CreatingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$CreatingDelegatedDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        UpdatingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$UpdatingDelegatedDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DeletingDelegatedData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateActivity$DeletingDelegatedDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MultipleDelegateActivities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 27
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivityLike:type",
          "docComment": "/**\n * DelegateActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **9 variant(s)** of the DelegateActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivityLike",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivityLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivityLike",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivityLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivityLike",
              "canonicalReference": "dred-network-registry!SpendingActivityLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivityLike",
              "canonicalReference": "dred-network-registry!MintingActivityLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivityLike",
              "canonicalReference": "dred-network-registry!BurningActivityLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedDataLike",
              "canonicalReference": "dred-network-registry!DelegateActivity$CreatingDelegatedDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedDataLike",
              "canonicalReference": "dred-network-registry!DelegateActivity$UpdatingDelegatedDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedDataLike",
              "canonicalReference": "dred-network-registry!DelegateActivity$DeletingDelegatedDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 23
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateActivityMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivityMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"DredNodeRegistryPolicy\";\n    enumName: \"DelegateActivity\";\n}, {\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"CapoLifecycleActivities\", \"Constr#0\", \"singletonField\", /* implied wrapper { activity: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"DelegateLifecycleActivities\", \"Constr#1\", \"singletonField\", /* implied wrapper { activity: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"SpendingActivities\", \"Constr#2\", \"singletonField\", /* implied wrapper { activity: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!SpendingActivity:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"MintingActivities\", \"Constr#3\", \"singletonField\", /* implied wrapper { activity: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!MintingActivity:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"BurningActivities\", \"Constr#4\", \"singletonField\", /* implied wrapper { activity: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!BurningActivity:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"CreatingDelegatedData\", \"Constr#5\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$CreatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ", \"isSeededActivity\">;\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"UpdatingDelegatedData\", \"Constr#6\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$UpdatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"DeletingDelegatedData\", \"Constr#7\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$DeletingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"MultipleDelegateActivities\", \"Constr#8\", \"singletonField\", /* implied wrapper { activities: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">, \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateActivityMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 59
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum_2:type",
          "docComment": "/**\n * DelegateDatum enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateDatum enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateDatumHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum = "
            },
            {
              "kind": "Content",
              "text": "{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Cip68RefToken",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefToken_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!~DelegationDetail_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$capoStoredData",
              "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum_3:type",
          "docComment": "/**\n * DelegateDatum enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateDatum enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateDatumHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum = "
            },
            {
              "kind": "Content",
              "text": "{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Cip68RefToken",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefToken_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!~DelegationDetail_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$capoStoredData",
              "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum_4:type",
          "docComment": "/**\n * DelegateDatum enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateDatum enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateDatumHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum = "
            },
            {
              "kind": "Content",
              "text": "{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Cip68RefToken",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefToken_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!~DelegationDetail_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$capoStoredData",
              "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatum:type",
          "docComment": "/**\n * DelegateDatum enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateDatum enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateDatumHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum = "
            },
            {
              "kind": "Content",
              "text": "{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Cip68RefToken",
              "canonicalReference": "dred-network-registry!DelegateDatum$Cip68RefToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!DelegationDetail:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$capoStoredData",
              "canonicalReference": "dred-network-registry!DelegateDatum$capoStoredData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!~AnyData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "NeighborhoodData",
              "canonicalReference": "dred-network-registry!~NeighborhoodData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "ProtocolSettings",
              "canonicalReference": "dred-network-registry!~ProtocolSettings:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatum$capoStoredData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "NodeRegistrationData",
              "canonicalReference": "dred-network-registry!NodeRegistrationData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$capoStoredDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "AnyDataLike",
              "canonicalReference": "dred-network-registry!~AnyDataLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredDataLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$capoStoredDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "NeighborhoodDataLike",
              "canonicalReference": "dred-network-registry!~NeighborhoodDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredDataLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$capoStoredDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "ProtocolSettingsLike",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredDataLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatum$capoStoredDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$capoStoredDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "NodeRegistrationDataLike",
              "canonicalReference": "dred-network-registry!NodeRegistrationDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefToken_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!~AnyData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefToken_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefToken_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!~AnyData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefToken_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefToken_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!~AnyData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefToken_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatum$Cip68RefToken:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!AnyData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Cip68RefTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "AnyDataLike",
              "canonicalReference": "dred-network-registry!~AnyDataLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefTokenLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Cip68RefTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "AnyDataLike",
              "canonicalReference": "dred-network-registry!~AnyDataLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefTokenLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Cip68RefTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "AnyDataLike",
              "canonicalReference": "dred-network-registry!~AnyDataLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefTokenLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatum$Cip68RefTokenLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Cip68RefTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "AnyDataLike",
              "canonicalReference": "dred-network-registry!AnyDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefTokenLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "ErgoAnyData",
              "canonicalReference": "dred-network-registry!~ErgoAnyData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$capoStoredData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "ErgoNeighborhoodData",
              "canonicalReference": "dred-network-registry!~ErgoNeighborhoodData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$capoStoredData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "ErgoProtocolSettings",
              "canonicalReference": "dred-network-registry!~ErgoProtocolSettings:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$capoStoredData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatum$Ergo$capoStoredData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "ErgoNodeRegistrationData",
              "canonicalReference": "dred-network-registry!ErgoNodeRegistrationData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$capoStoredData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "ErgoAnyData",
              "canonicalReference": "dred-network-registry!~ErgoAnyData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$Cip68RefToken_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "ErgoAnyData",
              "canonicalReference": "dred-network-registry!~ErgoAnyData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$Cip68RefToken_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "ErgoAnyData",
              "canonicalReference": "dred-network-registry!~ErgoAnyData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$Cip68RefToken_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatum$Ergo$Cip68RefToken:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "ErgoAnyData",
              "canonicalReference": "dred-network-registry!ErgoAnyData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$Cip68RefToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateDatumHelper_2:class",
          "docComment": "/**\n * Helper class for generating InlineTxOutputDatum for variants of the ***DelegateDatum*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateDatumHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateDatumHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_2#capoStoredData:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"DredNodeRegistryPolicy::DelegateDatum.capoStoredData\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoStoredData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "dred-network-registry!DelegateDatum$capoStoredDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        data: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeRegistrationDataLike",
                  "canonicalReference": "dred-network-registry!NodeRegistrationDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "capoStoredData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_2#Cip68RefToken:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"DredNodeRegistryPolicy::DelegateDatum.Cip68RefToken\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Cip68RefToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "dred-network-registry!DelegateDatum$Cip68RefTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        cip68meta: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!AnyDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cip68version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cip68RefToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_2#IsDelegation:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"DredNodeRegistryPolicy::DelegateDatum.IsDelegation\"***\n *\n * @remarks\n *\n * - ***DelegationDetailLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IsDelegation(dd: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!DelegationDetailLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tn: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "IsDelegation"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum",
                  "canonicalReference": "dred-network-registry!DelegateDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "dred-network-registry!DelegateDatum$Cip68RefTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!DelegationDetailLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "dred-network-registry!DelegateDatum$capoStoredDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateDatumHelper_3:class",
          "docComment": "/**\n * Helper class for generating InlineTxOutputDatum for variants of the ***DelegateDatum*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateDatumHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateDatumHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_3#capoStoredData:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"NeighborhoodPolicy::DelegateDatum.capoStoredData\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoStoredData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        data: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodDataLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "capoStoredData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_3#Cip68RefToken:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"NeighborhoodPolicy::DelegateDatum.Cip68RefToken\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Cip68RefToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        cip68meta: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cip68version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cip68RefToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_3#IsDelegation:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"NeighborhoodPolicy::DelegateDatum.IsDelegation\"***\n *\n * @remarks\n *\n * - ***DelegationDetailLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IsDelegation(dd: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tn: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "IsDelegation"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum",
                  "canonicalReference": "dred-network-registry!~DelegateDatum_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateDatumHelper_4:class",
          "docComment": "/**\n * Helper class for generating InlineTxOutputDatum for variants of the ***DelegateDatum*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateDatumHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateDatumHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_4#capoStoredData:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"ProtocolSettingsPolicy::DelegateDatum.capoStoredData\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoStoredData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        data: "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettingsLike",
                  "canonicalReference": "dred-network-registry!~ProtocolSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "capoStoredData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_4#Cip68RefToken:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"ProtocolSettingsPolicy::DelegateDatum.Cip68RefToken\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Cip68RefToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        cip68meta: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cip68version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cip68RefToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_4#IsDelegation:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"ProtocolSettingsPolicy::DelegateDatum.IsDelegation\"***\n *\n * @remarks\n *\n * - ***DelegationDetailLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IsDelegation(dd: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tn: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "IsDelegation"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum",
                  "canonicalReference": "dred-network-registry!~DelegateDatum_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateDatumHelper:class",
          "docComment": "/**\n * Helper class for generating InlineTxOutputDatum for variants of the ***DelegateDatum*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateDatumHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateDatumHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper#capoStoredData:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"MyMintSpendDelegate::DelegateDatum.capoStoredData\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoStoredData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        data: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "capoStoredData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper#Cip68RefToken:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"MyMintSpendDelegate::DelegateDatum.Cip68RefToken\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Cip68RefToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        cip68meta: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cip68version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cip68RefToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper#IsDelegation:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"MyMintSpendDelegate::DelegateDatum.IsDelegation\"***\n *\n * @remarks\n *\n * - ***DelegationDetailLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IsDelegation(dd: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tn: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "IsDelegation"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateDatumHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum",
                  "canonicalReference": "dred-network-registry!~DelegateDatum_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Cip68RefTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$capoStoredDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatumLike:type",
          "docComment": "/**\n * DelegateDatum enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the DelegateDatum enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateDatumHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatumLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Cip68RefTokenLike",
              "canonicalReference": "dred-network-registry!DelegateDatum$Cip68RefTokenLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetailLike",
              "canonicalReference": "dred-network-registry!DelegationDetailLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$capoStoredDataLike",
              "canonicalReference": "dred-network-registry!DelegateDatum$capoStoredDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatumLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateDatumMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatumMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"DredNodeRegistryPolicy\";\n    enumName: \"DelegateDatum\";\n}, {\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateDatumMeta",
              "canonicalReference": "dred-network-registry!DelegateDatumMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Cip68RefToken\", \"Constr#0\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Cip68RefToken",
              "canonicalReference": "dred-network-registry!DelegateDatum$Cip68RefToken:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateDatumMeta",
              "canonicalReference": "dred-network-registry!DelegateDatumMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"IsDelegation\", \"Constr#1\", \"singletonField\", /* implied wrapper { dd: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!DelegationDetail:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateDatumMeta",
              "canonicalReference": "dred-network-registry!DelegateDatumMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"capoStoredData\", \"Constr#2\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$capoStoredData",
              "canonicalReference": "dred-network-registry!DelegateDatum$capoStoredData:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateDatumMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 21
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_2:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_3:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_4:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateLifecycleActivity:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMe:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$Ergo$ReplacingMe_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$Ergo$ReplacingMe = "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$Ergo$ReplacingMe_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$Ergo$ReplacingMe_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$Ergo$ReplacingMe = "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$Ergo$ReplacingMe_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$Ergo$ReplacingMe_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$Ergo$ReplacingMe = "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$Ergo$ReplacingMe_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$Ergo$ReplacingMe:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$Ergo$ReplacingMe = "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMe:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$Ergo$ReplacingMe",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$ReplacingMe = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMe_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$ReplacingMe = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMe_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMe_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$ReplacingMe = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMe_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMe:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$ReplacingMe = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMe",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$ReplacingMeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMeLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$ReplacingMeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMeLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$ReplacingMeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMeLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMeLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$ReplacingMeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_2#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_2#ReplacingMe:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_2#ReplacingMe:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMeLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_2#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_2#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!DelegateLifecycleActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        ReplacingMe: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Retiring: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ValidatingSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_3#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_3#ReplacingMe:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_3#ReplacingMe:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_3#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_3#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        ReplacingMe: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Retiring: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ValidatingSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_4#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_4#ReplacingMe:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_4#ReplacingMe:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_4#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_4#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        ReplacingMe: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Retiring: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ValidatingSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper#ReplacingMe:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper#ReplacingMe:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        ReplacingMe: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Retiring: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ValidatingSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelperNested_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_2#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_2#ReplacingMe:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_2#ReplacingMe:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMeLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_2#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_2#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!DelegateLifecycleActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        ReplacingMe: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Retiring: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ValidatingSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelperNested_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_3#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_3#ReplacingMe:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_3#ReplacingMe:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_3#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_3#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        ReplacingMe: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Retiring: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ValidatingSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelperNested_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_4#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_4#ReplacingMe:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_4#ReplacingMe:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_4#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_4#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        ReplacingMe: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Retiring: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ValidatingSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested#ReplacingMe:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested#ReplacingMe:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelperNested#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        ReplacingMe: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Retiring: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ValidatingSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityLike_2:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMeLike",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivityLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityLike_3:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMeLike",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivityLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityLike_4:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMeLike",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$ReplacingMeLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivityLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateLifecycleActivityLike:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMeLike",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMeLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateLifecycleActivityMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivityMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoDelegateHelpers\";\n    enumName: \"DelegateLifecycleActivity\";\n}, {\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"ReplacingMe\", \"Constr#0\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$ReplacingMe:type"
            },
            {
              "kind": "Content",
              "text": ", \"isSeededActivity\">;\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Retiring\", \"Constr#1\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivityMeta",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"ValidatingSettings\", \"Constr#2\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivityMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 21
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateRole_2:type",
          "docComment": "/**\n * DelegateRole enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRole = "
            },
            {
              "kind": "Content",
              "text": "{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRole_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateRole_3:type",
          "docComment": "/**\n * DelegateRole enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRole = "
            },
            {
              "kind": "Content",
              "text": "{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRole_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateRole_4:type",
          "docComment": "/**\n * DelegateRole enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRole = "
            },
            {
              "kind": "Content",
              "text": "{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRole_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateRole_5:type",
          "docComment": "/**\n * DelegateRole enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRole = "
            },
            {
              "kind": "Content",
              "text": "{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRole_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateRole:type",
          "docComment": "/**\n * DelegateRole enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRole = "
            },
            {
              "kind": "Content",
              "text": "{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRole",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!DelegateRole:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_5:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateRoleHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelperNested_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!DelegateRole:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelperNested_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelperNested_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_5:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DelegateRoleHelperNested#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "dred-network-registry!~DelegateRole_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        MintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendInvariant: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: string;\n        OtherNamedDgt: string;\n        BothMintAndSpendDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        HandledByCapoOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 19
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type",
          "docComment": "/**\n * DelegateRole enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRoleLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRoleLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type",
          "docComment": "/**\n * DelegateRole enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRoleLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRoleLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type",
          "docComment": "/**\n * DelegateRole enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRoleLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRoleLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateRoleLike:type",
          "docComment": "/**\n * DelegateRole enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRoleLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRoleLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegateRoleMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRoleMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoDelegateHelpers\";\n    enumName: \"DelegateRole\";\n}, {\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleMeta",
              "canonicalReference": "dred-network-registry!DelegateRoleMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"MintDgt\", \"Constr#0\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleMeta",
              "canonicalReference": "dred-network-registry!DelegateRoleMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"SpendDgt\", \"Constr#1\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleMeta",
              "canonicalReference": "dred-network-registry!DelegateRoleMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"MintInvariant\", \"Constr#2\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleMeta",
              "canonicalReference": "dred-network-registry!DelegateRoleMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"SpendInvariant\", \"Constr#3\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleMeta",
              "canonicalReference": "dred-network-registry!DelegateRoleMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"DgDataPolicy\", \"Constr#4\", \"singletonField\", /* implied wrapper { name: ... } for singleVariantField */ string, \"noSpecialFlags\">;\n    OtherNamedDgt: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleMeta",
              "canonicalReference": "dred-network-registry!DelegateRoleMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"OtherNamedDgt\", \"Constr#5\", \"singletonField\", /* implied wrapper { name: ... } for singleVariantField */ string, \"noSpecialFlags\">;\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleMeta",
              "canonicalReference": "dred-network-registry!DelegateRoleMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"BothMintAndSpendDgt\", \"Constr#6\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleMeta",
              "canonicalReference": "dred-network-registry!DelegateRoleMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"HandledByCapoOnly\", \"Constr#7\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegateRoleMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 47
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegationDetail_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegationDetail = "
            },
            {
              "kind": "Content",
              "text": "{\n    capoAddr: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tn: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegationDetail_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegationDetail_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegationDetail = "
            },
            {
              "kind": "Content",
              "text": "{\n    capoAddr: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tn: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegationDetail_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegationDetail_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegationDetail = "
            },
            {
              "kind": "Content",
              "text": "{\n    capoAddr: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tn: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegationDetail_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegationDetail:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegationDetail = "
            },
            {
              "kind": "Content",
              "text": "{\n    capoAddr: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tn: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegationDetail",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegationDetailLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegationDetailLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    capoAddr: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n    tn: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegationDetailLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegationDetailLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegationDetailLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    capoAddr: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n    tn: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegationDetailLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DelegationDetailLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegationDetailLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    capoAddr: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n    tn: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegationDetailLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DelegationDetailLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegationDetailLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    capoAddr: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n    tn: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DelegationDetailLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~dgd_DataSrc_2:type",
          "docComment": "/**\n * dgd_DataSrc enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **4 variant(s)** of the dgd_DataSrc enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `dgd_DataSrcHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc = "
            },
            {
              "kind": "Content",
              "text": "{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Both",
              "canonicalReference": "dred-network-registry!~dgd_DataSrc$Both_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!dgd_DataSrc:type",
          "docComment": "/**\n * dgd_DataSrc enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **4 variant(s)** of the dgd_DataSrc enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `dgd_DataSrcHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc = "
            },
            {
              "kind": "Content",
              "text": "{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Both",
              "canonicalReference": "dred-network-registry!dgd_DataSrc$Both:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~dgd_DataSrc$Both_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc$Both = "
            },
            {
              "kind": "Content",
              "text": "{\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n    txo: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$Both_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!dgd_DataSrc$Both:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc$Both = "
            },
            {
              "kind": "Content",
              "text": "{\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n    txo: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$Both",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~dgd_DataSrc$BothLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc$BothLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n    txo: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$BothLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!dgd_DataSrc$BothLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc$BothLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n    txo: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$BothLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~dgd_DataSrc$Ergo$Both_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc$Ergo$Both = "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Both",
              "canonicalReference": "dred-network-registry!~dgd_DataSrc$Both_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$Ergo$Both_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!dgd_DataSrc$Ergo$Both:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc$Ergo$Both = "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Both",
              "canonicalReference": "dred-network-registry!dgd_DataSrc$Both:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$Ergo$Both",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***dgd_DataSrc*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class dgd_DataSrcHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "dgd_DataSrcHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper_2#Both:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Both\"***\n *\n * @remarks\n *\n * - ***dgd_DataSrc$BothLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Both(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrc$BothLike",
                  "canonicalReference": "dred-network-registry!~dgd_DataSrc$BothLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        txo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Both"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper_2#Input:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Input\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Input(utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "utxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Input"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper_2#Output:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Output\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Output(txo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "txo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Output"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper_2#Unk:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::dgd_DataSrc.Unk\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Unk(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Unk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrc",
                  "canonicalReference": "dred-network-registry!~dgd_DataSrc_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Unk: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Input: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Output: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Both: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrc$BothLike",
                  "canonicalReference": "dred-network-registry!~dgd_DataSrc$BothLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***dgd_DataSrc*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class dgd_DataSrcHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "dgd_DataSrcHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper#Both:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Both\"***\n *\n * @remarks\n *\n * - ***dgd_DataSrc$BothLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Both(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrc$BothLike",
                  "canonicalReference": "dred-network-registry!dgd_DataSrc$BothLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        txo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Both"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper#Input:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Input\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Input(utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "utxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Input"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper#Output:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Output\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Output(txo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "txo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Output"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper#Unk:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::dgd_DataSrc.Unk\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Unk(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Unk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrc",
                  "canonicalReference": "dred-network-registry!dgd_DataSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Unk: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Input: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Output: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Both: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrc$BothLike",
                  "canonicalReference": "dred-network-registry!dgd_DataSrc$BothLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~dgd_DataSrcLike_2:type",
          "docComment": "/**\n * dgd_DataSrc enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **4 variant(s)** of the dgd_DataSrc enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `dgd_DataSrcHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrcLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$BothLike",
              "canonicalReference": "dred-network-registry!~dgd_DataSrc$BothLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrcLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!dgd_DataSrcLike:type",
          "docComment": "/**\n * dgd_DataSrc enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **4 variant(s)** of the dgd_DataSrc enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `dgd_DataSrcHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrcLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$BothLike",
              "canonicalReference": "dred-network-registry!dgd_DataSrc$BothLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrcLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!dgd_DataSrcMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrcMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoHelpers\";\n    enumName: \"dgd_DataSrc\";\n}, {\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrcMeta",
              "canonicalReference": "dred-network-registry!dgd_DataSrcMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Unk\", \"Constr#0\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrcMeta",
              "canonicalReference": "dred-network-registry!dgd_DataSrcMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Input\", \"Constr#1\", \"singletonField\", /* implied wrapper { utxo: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrcMeta",
              "canonicalReference": "dred-network-registry!dgd_DataSrcMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Output\", \"Constr#2\", \"singletonField\", /* implied wrapper { txo: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrcMeta",
              "canonicalReference": "dred-network-registry!dgd_DataSrcMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Both\", \"Constr#3\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Both",
              "canonicalReference": "dred-network-registry!dgd_DataSrc$Both:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrcMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 27
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DgDataDetails_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DgDataDetails = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataSrc: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc",
              "canonicalReference": "dred-network-registry!~dgd_DataSrc_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    id: number[];\n    type: string;\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DgDataDetails_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DgDataDetails:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DgDataDetails = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataSrc: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc",
              "canonicalReference": "dred-network-registry!dgd_DataSrc:type"
            },
            {
              "kind": "Content",
              "text": ";\n    id: number[];\n    type: string;\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DgDataDetails",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DgDataDetailsLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DgDataDetailsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataSrc: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrcLike",
              "canonicalReference": "dred-network-registry!~dgd_DataSrcLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    id: number[];\n    type: string;\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DgDataDetailsLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!DgDataDetailsLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DgDataDetailsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataSrc: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrcLike",
              "canonicalReference": "dred-network-registry!dgd_DataSrcLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    id: number[];\n    type: string;\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "DgDataDetailsLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!DredCapo:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DredCapo extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DredCapo",
              "canonicalReference": "dred-network-registry!DredCapo:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "DredCapoFeatures",
              "canonicalReference": "dred-network-registry!~DredCapoFeatures:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredCapo.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DredCapo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!DredCapo#autoSetup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoSetup: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "autoSetup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!DredCapo#defaultFeatureFlags:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get defaultFeatureFlags(): "
                },
                {
                  "kind": "Reference",
                  "text": "DredCapoFeatures",
                  "canonicalReference": "dred-network-registry!~DredCapoFeatures:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultFeatureFlags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#findNbhRegistryEntries:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findNbhRegistryEntries(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataTemplate",
                  "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"dredNbh\", any>, unknown>[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findNbhRegistryEntries"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#findNodeOpVaultEntries:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findNodeOpVaultEntries(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataTemplate",
                  "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"dredNode\", any>, unknown>[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findNodeOpVaultEntries"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#findSettingsInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findSettingsInfo(options: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        charterData: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoUtxos?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ErgoProtocolSettings",
                  "canonicalReference": "dred-network-registry!~ErgoProtocolSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettings",
                  "canonicalReference": "dred-network-registry!~ProtocolSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findSettingsInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#getMintDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMintDelegate(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$Ergo$CharterData",
                  "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MyMintSpendDelegate",
                  "canonicalReference": "dred-network-registry!MyMintSpendDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#getNbhRegistryController:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNbhRegistryController(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$Ergo$CharterData",
                  "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodController",
                  "canonicalReference": "dred-network-registry!NeighborhoodController:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNbhRegistryController"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#getNodeRegistryController:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNodeRegistryController(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$Ergo$CharterData",
                  "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeRegistryController",
                  "canonicalReference": "dred-network-registry!NodeRegistryController:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNodeRegistryController"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#getSettingsController:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSettingsController(options: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        charterData: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        optional?: true;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettingsController",
                  "canonicalReference": "dred-network-registry!ProtocolSettingsController:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSettingsController"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#getSpendDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpendDelegate(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$Ergo$CharterData",
                  "canonicalReference": "dred-network-registry!~CapoDatum$Ergo$CharterData_2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MyMintSpendDelegate",
                  "canonicalReference": "dred-network-registry!MyMintSpendDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#initDelegateRoles:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initDelegateRoles(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "DelegateMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegateMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        readonly govAuthority: import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "DelegateSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"authority\", import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", any>;\n        readonly spendDelegate: import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "DelegateSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"spendDgt\", any, {}>;\n        readonly mintDelegate: import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "DelegateSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"mintDgt\", any, {}>;\n        readonly settings: import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "DelegateSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"dgDataPolicy\", any, {}>;\n        readonly nodeOpRegistry: import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "DelegateSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"dgDataPolicy\", any, {}>;\n        readonly nbhRegistry: import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "DelegateSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"dgDataPolicy\", any, {}>;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "initDelegateRoles"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#mkConfigData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkConfigData(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/uplc\")."
                },
                {
                  "kind": "Reference",
                  "text": "MapData",
                  "canonicalReference": "@helios-lang/uplc!MapData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkConfigData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#mkInitialSettings:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkInitialSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "minimalProtocolSettings",
                  "canonicalReference": "dred-network-registry!~minimalProtocolSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkInitialSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirements(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "requirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoHeliosBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#todoAddNamedDelegates:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "todoAddNamedDelegates(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "todoAddNamedDelegates"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!DredCapo#txnMintingFungibleTokens:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMintingFungibleTokens<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ", tokenCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": " & import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasGovAuthority",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasGovAuthority:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenCount",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMintingFungibleTokens"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~DredCapoFeatures:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type DredCapoFeatures = "
            },
            {
              "kind": "Content",
              "text": "{\n    settings?: boolean;\n    nodeOpRegistry?: boolean;\n    nbhRegistry?: boolean;\n    s3domain?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.ts",
          "releaseTag": "Public",
          "name": "DredCapoFeatures",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge:class",
          "docComment": "/**\n * GENERATED data bridge for **BasicDelegate** script (defined in class ***NodeRegistryBundle***) main: **src/delegation/BasicDelegate.hl**, project: **stellar-contracts**\n *\n * @remarks\n *\n * - note that you may override `get dataBridgeName() { return \"...\" }` to customize the name of this bridge class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DredNodeRegistryPolicyDataBridge extends "
            },
            {
              "kind": "Reference",
              "text": "ContractDataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DredNodeRegistryPolicyDataBridge",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#activity:member",
              "docComment": "/**\n * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#datum:member",
              "docComment": "/**\n * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)*** for this contract script.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#DelegateActivity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#DelegateDatum:member",
              "docComment": "/**\n * this is the specific type of datum for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge.isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#readDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "dred-network-registry!ErgoDelegateDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reader: "
                },
                {
                  "kind": "Reference",
                  "text": "DredNodeRegistryPolicyDataBridgeReader",
                  "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#types:member",
              "docComment": "/**\n * accessors for all the types defined in the `BasicDelegate` script\n *\n * @remarks\n *\n * - these accessors are used to generate UplcData for each type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "types: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateRole: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelper",
                  "canonicalReference": "dred-network-registry!~DelegateRoleHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelper",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelper",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelper",
                  "canonicalReference": "dred-network-registry!~SpendingActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelper",
                  "canonicalReference": "dred-network-registry!~MintingActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelper",
                  "canonicalReference": "dred-network-registry!~BurningActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateAction: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionHelper",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestEntryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeHelper",
                  "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingCharterChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChangeHelper",
                  "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cctx_CharterInputType: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeHelper",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dgd_DataSrc: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrcHelper",
                  "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        AnyData: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!AnyDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegationDetail: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!DelegationDetailLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tn: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        NodeRegistrationData: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeRegistrationDataLike",
                  "canonicalReference": "dred-network-registry!NodeRegistrationDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n            memberToken: string;\n            nodeAddress: string;\n            nodePort: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            lastHeartbeat: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "dred-network-registry!~TimeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RelativeDelegateLink: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            uutName: string;\n            delegateValidatorHash: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n            config: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateChange: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateChangeLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateActionLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoManifestEntry: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "dred-network-registry!CapoManifestEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            entryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeLike",
                  "canonicalReference": "dred-network-registry!ManifestEntryTypeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            tokenName: number[];\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoCtx: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "dred-network-registry!CapoCtxLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            charter: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeLike",
                  "canonicalReference": "dred-network-registry!cctx_CharterInputTypeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        NodeOperatorSettings: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettingsLike",
                  "canonicalReference": "dred-network-registry!NodeOperatorSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            expectedHeartbeatInterval: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            requiredNodeUptime: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            minNodeRegistrationFee: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            minNodeOperatorStake: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n                mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n                tokens: {\n                    name: number[] | string;\n                    qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n                }[];\n            }[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        AbstractSettingsForNodeOperator: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractSettingsForNodeOperatorLike",
                  "canonicalReference": "dred-network-registry!AbstractSettingsForNodeOperatorLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            nodeOpSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettingsLike",
                  "canonicalReference": "dred-network-registry!NodeOperatorSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataDetails: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetailsLike",
                  "canonicalReference": "dred-network-registry!DgDataDetailsLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            dataSrc: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrcLike",
                  "canonicalReference": "dred-network-registry!dgd_DataSrcLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            id: number[];\n            type: string;\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 116
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺAbstractSettingsForNodeOperatorCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺAbstractSettingsForNodeOperatorCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AbstractSettingsForNodeOperator",
                  "canonicalReference": "dred-network-registry!AbstractSettingsForNodeOperator:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractSettingsForNodeOperatorLike",
                  "canonicalReference": "dred-network-registry!AbstractSettingsForNodeOperatorLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺAbstractSettingsForNodeOperatorCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺAnyDataCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺAnyDataCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "dred-network-registry!AnyData:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!AnyDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺAnyDataCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺCapoCtxCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoCtxCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "dred-network-registry!CapoCtx:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "dred-network-registry!CapoCtxLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoCtxCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺCapoManifestEntryCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoManifestEntryCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "dred-network-registry!CapoManifestEntry:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "dred-network-registry!CapoManifestEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoManifestEntryCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺDelegationDetailCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDelegationDetailCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "dred-network-registry!DelegationDetail:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!DelegationDetailLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDelegationDetailCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺDgDataDetailsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDgDataDetailsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetails",
                  "canonicalReference": "dred-network-registry!DgDataDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetailsLike",
                  "canonicalReference": "dred-network-registry!DgDataDetailsLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDgDataDetailsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺNodeOperatorSettingsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺNodeOperatorSettingsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettings",
                  "canonicalReference": "dred-network-registry!NodeOperatorSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettingsLike",
                  "canonicalReference": "dred-network-registry!NodeOperatorSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺNodeOperatorSettingsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺNodeRegistrationDataCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺNodeRegistrationDataCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeRegistrationData",
                  "canonicalReference": "dred-network-registry!NodeRegistrationData:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "NodeRegistrationDataLike",
                  "canonicalReference": "dred-network-registry!NodeRegistrationDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺNodeRegistrationDataCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺPendingDelegateChangeCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺPendingDelegateChangeCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "dred-network-registry!PendingDelegateChange:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateChangeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺPendingDelegateChangeCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge#ᱺᱺRelativeDelegateLinkCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺRelativeDelegateLinkCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺRelativeDelegateLinkCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DredNodeRegistryPolicyDataBridgeReader extends "
            },
            {
              "kind": "Reference",
              "text": "DataBridgeReaderClass",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DredNodeRegistryPolicyDataBridgeReader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DredNodeRegistryPolicyDataBridgeReader` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "DredNodeRegistryPolicyDataBridge",
                  "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ", isMainnet: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bridge",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isMainnet",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#AbstractSettingsForNodeOperator:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **AbstractSettingsForNodeOperator*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AbstractSettingsForNodeOperator(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractSettingsForNodeOperator",
                  "canonicalReference": "dred-network-registry!AbstractSettingsForNodeOperator:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AbstractSettingsForNodeOperator"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#AnyData:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **AnyData*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AnyData(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "dred-network-registry!AnyData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AnyData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#bridge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "DredNodeRegistryPolicyDataBridge",
                  "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bridge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#BurningActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **BurningActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BurningActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoBurningActivity",
                  "canonicalReference": "dred-network-registry!ErgoBurningActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "BurningActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#CapoCtx:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoCtx*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoCtx(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "dred-network-registry!CapoCtx:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoCtx"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#CapoLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoCapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!ErgoCapoLifecycleActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#CapoManifestEntry:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoManifestEntry*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoManifestEntry(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "dred-network-registry!CapoManifestEntry:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoManifestEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#cctx_CharterInputType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **cctx_CharterInputType*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cctx_CharterInputType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ergocctx_CharterInputType",
                  "canonicalReference": "dred-network-registry!Ergocctx_CharterInputType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cctx_CharterInputType"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$Cip68RefToken",
                  "canonicalReference": "dred-network-registry!DelegateDatum$Ergo$Cip68RefToken:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegationDetail",
                  "canonicalReference": "dred-network-registry!ErgoDelegationDetail:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$capoStoredData",
                  "canonicalReference": "dred-network-registry!DelegateDatum$Ergo$capoStoredData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#DelegateActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateActivity",
                  "canonicalReference": "dred-network-registry!ErgoDelegateActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#DelegateDatum:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateDatum*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "dred-network-registry!ErgoDelegateDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#DelegateLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!ErgoDelegateLifecycleActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#DelegateRole:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateRole*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateRole(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateRole",
                  "canonicalReference": "dred-network-registry!ErgoDelegateRole:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRole"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#DelegationDetail:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegationDetail*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegationDetail(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "dred-network-registry!DelegationDetail:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegationDetail"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#dgd_DataSrc:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **dgd_DataSrc*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dgd_DataSrc(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ergodgd_DataSrc",
                  "canonicalReference": "dred-network-registry!Ergodgd_DataSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dgd_DataSrc"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#DgDataDetails:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DgDataDetails*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataDetails(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetails",
                  "canonicalReference": "dred-network-registry!DgDataDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#ManifestActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestActivity",
                  "canonicalReference": "dred-network-registry!ErgoManifestActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#ManifestEntryType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestEntryType*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestEntryType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestEntryType",
                  "canonicalReference": "dred-network-registry!ErgoManifestEntryType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestEntryType"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#MintingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **MintingActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MintingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMintingActivity",
                  "canonicalReference": "dred-network-registry!ErgoMintingActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MintingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#NodeOperatorSettings:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **NodeOperatorSettings*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NodeOperatorSettings(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettings",
                  "canonicalReference": "dred-network-registry!NodeOperatorSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NodeOperatorSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#NodeRegistrationData:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **NodeRegistrationData*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NodeRegistrationData(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeRegistrationData",
                  "canonicalReference": "dred-network-registry!NodeRegistrationData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NodeRegistrationData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#PendingCharterChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingCharterChange*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingCharterChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingCharterChange",
                  "canonicalReference": "dred-network-registry!ErgoPendingCharterChange:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingCharterChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#PendingDelegateAction:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateAction*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateAction(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingDelegateAction",
                  "canonicalReference": "dred-network-registry!ErgoPendingDelegateAction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateAction"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#PendingDelegateChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateChange*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "dred-network-registry!PendingDelegateChange:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#RelativeDelegateLink:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **RelativeDelegateLink*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RelativeDelegateLink(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RelativeDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridgeReader#SpendingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **SpendingActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SpendingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoSpendingActivity",
                  "canonicalReference": "dred-network-registry!ErgoSpendingActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SpendingActivity"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoAbstractSettingsForNodeOperator:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoAbstractSettingsForNodeOperator = "
            },
            {
              "kind": "Content",
              "text": "{\n    nodeOpSettings: "
            },
            {
              "kind": "Reference",
              "text": "ErgoNodeOperatorSettings",
              "canonicalReference": "dred-network-registry!ErgoNodeOperatorSettings:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoAbstractSettingsForNodeOperator",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoAnyData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoAnyData = "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!~AnyData_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoAnyData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoAnyData_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoAnyData = "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!~AnyData_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoAnyData_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoAnyData_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoAnyData = "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!~AnyData_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoAnyData_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoAnyData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoAnyData = "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "dred-network-registry!AnyData:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoAnyData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoAppInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoAppInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    url: string;\n    revenueModel: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRevenueModel",
              "canonicalReference": "dred-network-registry!~ErgoRevenueModel:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoAppInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoBurningActivity_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoBurningActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!~BurningActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoBurningActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoBurningActivity_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoBurningActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!~BurningActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoBurningActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoBurningActivity_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoBurningActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!~BurningActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoBurningActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoBurningActivity:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoBurningActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "dred-network-registry!BurningActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoBurningActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoCapoCtx:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoCtx = "
            },
            {
              "kind": "Content",
              "text": "{\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    charter: "
            },
            {
              "kind": "Reference",
              "text": "Ergocctx_CharterInputType",
              "canonicalReference": "dred-network-registry!Ergocctx_CharterInputType:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoCtx",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$CreatingDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewMintDelegate_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!~ErgoManifestActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoLifecycleActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$CreatingDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewMintDelegate_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!~ErgoManifestActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoLifecycleActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$CreatingDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$CreatingDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewSpendDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!~CapoLifecycleActivity$Ergo$forcingNewMintDelegate_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!~ErgoManifestActivity_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoLifecycleActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoCapoLifecycleActivity:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$CreatingDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$Ergo$CreatingDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!ErgoDelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$Ergo$forcingNewSpendDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate",
              "canonicalReference": "dred-network-registry!CapoLifecycleActivity$Ergo$forcingNewMintDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!ErgoManifestActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoLifecycleActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoCapoManifestEntry_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestEntryType",
              "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoManifestEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoCapoManifestEntry_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestEntryType",
              "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoManifestEntry_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoCapoManifestEntry_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestEntryType",
              "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoManifestEntry_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoCapoManifestEntry_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestEntryType",
              "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoManifestEntry_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoCapoManifestEntry:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestEntryType",
              "canonicalReference": "dred-network-registry!ErgoManifestEntryType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoManifestEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~Ergocctx_CharterInputType_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Ergocctx_CharterInputType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$RefInput",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$RefInput_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$Input",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$Input_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "Ergocctx_CharterInputType_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~Ergocctx_CharterInputType_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Ergocctx_CharterInputType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$RefInput",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$RefInput_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$Input",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$Input_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "Ergocctx_CharterInputType_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~Ergocctx_CharterInputType_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Ergocctx_CharterInputType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$RefInput",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$RefInput_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$Input",
              "canonicalReference": "dred-network-registry!~cctx_CharterInputType$Ergo$Input_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "Ergocctx_CharterInputType_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!Ergocctx_CharterInputType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Ergocctx_CharterInputType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$RefInput",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType$Ergo$RefInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$Input",
              "canonicalReference": "dred-network-registry!cctx_CharterInputType$Ergo$Input:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "Ergocctx_CharterInputType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateActivity_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoSpendingActivity",
              "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoMintingActivity",
              "canonicalReference": "dred-network-registry!~ErgoMintingActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoBurningActivity",
              "canonicalReference": "dred-network-registry!~ErgoBurningActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$CreatingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$UpdatingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$DeletingDelegatedData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 23
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateActivity_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoSpendingActivity",
              "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoMintingActivity",
              "canonicalReference": "dred-network-registry!~ErgoMintingActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoBurningActivity",
              "canonicalReference": "dred-network-registry!~ErgoBurningActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$CreatingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$UpdatingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$DeletingDelegatedData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 23
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateActivity_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoSpendingActivity",
              "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoMintingActivity",
              "canonicalReference": "dred-network-registry!~ErgoMintingActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoBurningActivity",
              "canonicalReference": "dred-network-registry!~ErgoBurningActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$CreatingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$UpdatingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!~DelegateActivity$Ergo$DeletingDelegatedData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 23
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoDelegateActivity:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoLifecycleActivity",
              "canonicalReference": "dred-network-registry!ErgoCapoLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateLifecycleActivity",
              "canonicalReference": "dred-network-registry!ErgoDelegateLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoSpendingActivity",
              "canonicalReference": "dred-network-registry!ErgoSpendingActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoMintingActivity",
              "canonicalReference": "dred-network-registry!ErgoMintingActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoBurningActivity",
              "canonicalReference": "dred-network-registry!ErgoBurningActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$CreatingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$Ergo$CreatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$UpdatingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$Ergo$UpdatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$DeletingDelegatedData",
              "canonicalReference": "dred-network-registry!DelegateActivity$Ergo$DeletingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 23
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateDatum = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$Cip68RefToken",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegationDetail",
              "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$capoStoredData",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateDatum_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateDatum = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$Cip68RefToken",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegationDetail",
              "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$capoStoredData",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateDatum_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateDatum = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$Cip68RefToken",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegationDetail",
              "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$capoStoredData",
              "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateDatum_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoDelegateDatum:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateDatum = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$Cip68RefToken",
              "canonicalReference": "dred-network-registry!DelegateDatum$Ergo$Cip68RefToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegationDetail",
              "canonicalReference": "dred-network-registry!ErgoDelegationDetail:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$capoStoredData",
              "canonicalReference": "dred-network-registry!DelegateDatum$Ergo$capoStoredData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateDatum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$Ergo$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$Ergo$ReplacingMe_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateLifecycleActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$Ergo$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$Ergo$ReplacingMe_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateLifecycleActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$Ergo$ReplacingMe",
              "canonicalReference": "dred-network-registry!~DelegateLifecycleActivity$Ergo$ReplacingMe_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateLifecycleActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoDelegateLifecycleActivity:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$Ergo$ReplacingMe",
              "canonicalReference": "dred-network-registry!DelegateLifecycleActivity$Ergo$ReplacingMe:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateLifecycleActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateRole_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateRole = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateRole_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateRole_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateRole = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateRole_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateRole_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateRole = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateRole_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegateRole_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateRole = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateRole_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoDelegateRole:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateRole = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!DelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateRole",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegationDetail = "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!~DelegationDetail_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegationDetail_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegationDetail = "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!~DelegationDetail_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegationDetail_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegationDetail = "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!~DelegationDetail_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegationDetail_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoDelegationDetail:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegationDetail = "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "dred-network-registry!DelegationDetail:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegationDetail",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~Ergodgd_DataSrc_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Ergodgd_DataSrc = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Ergo$Both",
              "canonicalReference": "dred-network-registry!~dgd_DataSrc$Ergo$Both_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "Ergodgd_DataSrc_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!Ergodgd_DataSrc:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Ergodgd_DataSrc = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Ergo$Both",
              "canonicalReference": "dred-network-registry!dgd_DataSrc$Ergo$Both:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "Ergodgd_DataSrc",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoDgDataDetails:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDgDataDetails = "
            },
            {
              "kind": "Content",
              "text": "{\n    dataSrc: "
            },
            {
              "kind": "Reference",
              "text": "Ergodgd_DataSrc",
              "canonicalReference": "dred-network-registry!Ergodgd_DataSrc:type"
            },
            {
              "kind": "Content",
              "text": ";\n    id: number[];\n    type: string;\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoDgDataDetails",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoFeeSource:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoFeeSource = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeeSource",
              "canonicalReference": "dred-network-registry!~FeeSource:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoFeeSource",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoManifestActivity_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$updatingEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$addingEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$forkingThreadToken_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$burningThreadToken_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoManifestActivity_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$updatingEntry_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$addingEntry_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$forkingThreadToken_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$burningThreadToken_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoManifestActivity_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$updatingEntry_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$addingEntry_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$forkingThreadToken_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$burningThreadToken_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoManifestActivity_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$updatingEntry_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$addingEntry_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$forkingThreadToken_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$burningThreadToken_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestActivity_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoManifestActivity:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$updatingEntry",
              "canonicalReference": "dred-network-registry!ManifestActivity$Ergo$updatingEntry:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$addingEntry",
              "canonicalReference": "dred-network-registry!ManifestActivity$Ergo$addingEntry:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$forkingThreadToken",
              "canonicalReference": "dred-network-registry!ManifestActivity$Ergo$forkingThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$burningThreadToken",
              "canonicalReference": "dred-network-registry!ManifestActivity$Ergo$burningThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestEntryType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DgDataPolicy",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DgDataPolicy_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DelegateThreads",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DelegateThreads_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestEntryType_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestEntryType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DgDataPolicy",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DgDataPolicy_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DelegateThreads",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DelegateThreads_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestEntryType_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestEntryType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DgDataPolicy",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DgDataPolicy_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DelegateThreads",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DelegateThreads_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestEntryType_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestEntryType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DgDataPolicy",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DgDataPolicy_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DelegateThreads",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DelegateThreads_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestEntryType_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoManifestEntryType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestEntryType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DgDataPolicy",
              "canonicalReference": "dred-network-registry!ManifestEntryType$Ergo$DgDataPolicy:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DelegateThreads",
              "canonicalReference": "dred-network-registry!ManifestEntryType$Ergo$DelegateThreads:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestEntryType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoMintingActivity_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoMintingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!~MintingActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoMintingActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoMintingActivity_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoMintingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!~MintingActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoMintingActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoMintingActivity_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoMintingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!~MintingActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoMintingActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoMintingActivity:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoMintingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "dred-network-registry!MintingActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoMintingActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoNeighborhoodData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoNeighborhoodData = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    memberToken: string;\n    name: string;\n    description: string;\n    appInfo: "
            },
            {
              "kind": "Reference",
              "text": "ErgoAppInfo",
              "canonicalReference": "dred-network-registry!~ErgoAppInfo:type"
            },
            {
              "kind": "Content",
              "text": ";\n    opsInfo: "
            },
            {
              "kind": "Reference",
              "text": "ErgoNodeOpsInfo",
              "canonicalReference": "dred-network-registry!~ErgoNodeOpsInfo:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoNeighborhoodData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoNeighborhoodSettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoNeighborhoodSettings = "
            },
            {
              "kind": "Reference",
              "text": "NeighborhoodSettings",
              "canonicalReference": "dred-network-registry!~NeighborhoodSettings:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoNeighborhoodSettings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoNodeOperatorSettings_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoNodeOperatorSettings = "
            },
            {
              "kind": "Reference",
              "text": "NodeOperatorSettings",
              "canonicalReference": "dred-network-registry!~NodeOperatorSettings_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoNodeOperatorSettings_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoNodeOperatorSettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoNodeOperatorSettings = "
            },
            {
              "kind": "Reference",
              "text": "NodeOperatorSettings",
              "canonicalReference": "dred-network-registry!NodeOperatorSettings:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoNodeOperatorSettings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoNodeOpsInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoNodeOpsInfo = "
            },
            {
              "kind": "Reference",
              "text": "NodeOpsInfo",
              "canonicalReference": "dred-network-registry!~NodeOpsInfo:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoNodeOpsInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoNodeRegistrationData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoNodeRegistrationData = "
            },
            {
              "kind": "Reference",
              "text": "NodeRegistrationData",
              "canonicalReference": "dred-network-registry!NodeRegistrationData:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoNodeRegistrationData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingCharterChange = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateChange",
              "canonicalReference": "dred-network-registry!~ErgoPendingDelegateChange_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$Ergo$otherManifestChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$Ergo$otherManifestChange_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingCharterChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingCharterChange = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateChange",
              "canonicalReference": "dred-network-registry!~ErgoPendingDelegateChange_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$Ergo$otherManifestChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$Ergo$otherManifestChange_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingCharterChange_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingCharterChange = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateChange",
              "canonicalReference": "dred-network-registry!~ErgoPendingDelegateChange_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$Ergo$otherManifestChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$Ergo$otherManifestChange_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingCharterChange_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingCharterChange = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateChange",
              "canonicalReference": "dred-network-registry!~ErgoPendingDelegateChange_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$Ergo$otherManifestChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$Ergo$otherManifestChange_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingCharterChange_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoPendingCharterChange:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingCharterChange = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateChange",
              "canonicalReference": "dred-network-registry!ErgoPendingDelegateChange:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$Ergo$otherManifestChange",
              "canonicalReference": "dred-network-registry!PendingCharterChange$Ergo$otherManifestChange:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingCharterChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateAction = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Add_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Replace_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateAction_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateAction = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Add_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Replace_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateAction_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateAction = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Add_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Replace_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateAction_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateAction = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Add_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Replace_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateAction_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoPendingDelegateAction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateAction = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Add",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$Ergo$Add:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Replace",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$Ergo$Replace:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateAction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingDelegateChange_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateAction",
              "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingDelegateChange_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateAction",
              "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateChange_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingDelegateChange_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateAction",
              "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateChange_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoPendingDelegateChange_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateAction",
              "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateChange_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoPendingDelegateChange:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateAction",
              "canonicalReference": "dred-network-registry!ErgoPendingDelegateAction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!ErgoDelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoProtocolSettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoProtocolSettings = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    nodeOpSettings: "
            },
            {
              "kind": "Reference",
              "text": "ErgoNodeOperatorSettings",
              "canonicalReference": "dred-network-registry!~ErgoNodeOperatorSettings_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    nbhSettings: "
            },
            {
              "kind": "Reference",
              "text": "ErgoNeighborhoodSettings",
              "canonicalReference": "dred-network-registry!~ErgoNeighborhoodSettings:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoProtocolSettings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoRelativeDelegateLink = "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoRelativeDelegateLink_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoRelativeDelegateLink = "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoRelativeDelegateLink_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoRelativeDelegateLink = "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoRelativeDelegateLink_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoRelativeDelegateLink = "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoRelativeDelegateLink_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoRelativeDelegateLink = "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoRelativeDelegateLink",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoRevenueModel:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoRevenueModel = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    TransactionBased: "
            },
            {
              "kind": "Reference",
              "text": "RevenueModel$Ergo$TransactionBased",
              "canonicalReference": "dred-network-registry!~RevenueModel$Ergo$TransactionBased:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Subscription: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoSubscriptionFeeFrequency",
              "canonicalReference": "dred-network-registry!~ErgoSubscriptionFeeFrequency:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoRevenueModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoSpendingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!~SpendingActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoSpendingActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoSpendingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!~SpendingActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoSpendingActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoSpendingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!~SpendingActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoSpendingActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ErgoSpendingActivity:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoSpendingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "dred-network-registry!SpendingActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoSpendingActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ErgoSubscriptionFeeFrequency:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoSubscriptionFeeFrequency = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SubscriptionFeeFrequency",
              "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequency:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ErgoSubscriptionFeeFrequency",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~FeeSource:type",
          "docComment": "/**\n * FeeSource enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the FeeSource enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `FeeSourceHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type FeeSource = "
            },
            {
              "kind": "Content",
              "text": "{\n    EndUser: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SponsorContract: "
            },
            {
              "kind": "Reference",
              "text": "ScriptHash",
              "canonicalReference": "@helios-lang/ledger!ScriptHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "FeeSource",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~FeeSourceHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***FeeSource*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FeeSourceHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "FeeSourceHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~FeeSourceHelper#EndUser:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"NeighborhoodData::FeeSource.EndUser\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get EndUser(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EndUser",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~FeeSourceHelper#SponsorContract:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodData::FeeSource.SponsorContract\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SponsorContract(sponsorContract: "
                },
                {
                  "kind": "Reference",
                  "text": "ScriptHash",
                  "canonicalReference": "@helios-lang/ledger!ScriptHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sponsorContract",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SponsorContract"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~FeeSourceHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FeeSource",
                  "canonicalReference": "dred-network-registry!~FeeSource:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        EndUser: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SponsorContract: "
                },
                {
                  "kind": "Reference",
                  "text": "ScriptHash",
                  "canonicalReference": "@helios-lang/ledger!ScriptHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~FeeSourceLike:type",
          "docComment": "/**\n * FeeSource enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the FeeSource enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `FeeSourceHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type FeeSourceLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    EndUser: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SponsorContract: /* implied wrapper { sponsorContract: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "ScriptHash",
              "canonicalReference": "@helios-lang/ledger!ScriptHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "FeeSourceLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity_2:type",
          "docComment": "/**\n * ManifestActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity_3:type",
          "docComment": "/**\n * ManifestActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity_4:type",
          "docComment": "/**\n * ManifestActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity:type",
          "docComment": "/**\n * ManifestActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntry:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!ManifestActivity$addingEntry:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntry_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntry_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntry_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$addingEntry:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntryLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntryLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntryLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$addingEntryLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$addingEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntryLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadToken_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadToken_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadToken_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadToken_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadToken:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadTokenLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadTokenLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadTokenLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadTokenLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$burningThreadTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    burnedThreadCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadTokenLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$addingEntry_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$addingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$addingEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$addingEntry_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$addingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$addingEntry_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$addingEntry_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$addingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$addingEntry_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$addingEntry_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$addingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntry_5:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$addingEntry_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$Ergo$addingEntry:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$addingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!ManifestActivity$addingEntry:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$addingEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$burningThreadToken_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$burningThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$burningThreadToken_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$burningThreadToken_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$burningThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$burningThreadToken_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$burningThreadToken_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$burningThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$burningThreadToken_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$burningThreadToken_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$burningThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadToken_5:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$burningThreadToken_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$Ergo$burningThreadToken:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$burningThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$burningThreadToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$forkingThreadToken_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$forkingThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$forkingThreadToken_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$forkingThreadToken_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$forkingThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$forkingThreadToken_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$forkingThreadToken_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$forkingThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$forkingThreadToken_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$forkingThreadToken_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$forkingThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_5:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$forkingThreadToken_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$Ergo$forkingThreadToken:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$forkingThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$forkingThreadToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$updatingEntry_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$updatingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$updatingEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$updatingEntry_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$updatingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$updatingEntry_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$updatingEntry_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$updatingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$updatingEntry_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$Ergo$updatingEntry_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$updatingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_5:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$updatingEntry_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$Ergo$updatingEntry:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$updatingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntry:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$updatingEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadToken_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadToken_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadToken_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadToken_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadToken_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadToken:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadTokenLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadTokenLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadTokenLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadTokenLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$forkingThreadTokenLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    newThreadCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadTokenLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntry_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntry_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntry_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntry_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntry:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntryLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntryLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntryLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntryLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$updatingEntryLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    key: string;\n    tokenName: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntryLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestActivityHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_2#addingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$addingEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_2#burningThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_2#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_2#retiringEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_2#updatingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "dred-network-registry!ManifestActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        retiringEntry: string;\n        updatingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        addingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$addingEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forkingThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        burningThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestActivityHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_3#addingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_3#burningThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_3#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_3#retiringEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_3#updatingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "dred-network-registry!~ManifestActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        retiringEntry: string;\n        updatingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        addingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forkingThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        burningThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestActivityHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_4#addingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_4#burningThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_4#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_4#retiringEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_4#updatingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "dred-network-registry!~ManifestActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        retiringEntry: string;\n        updatingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        addingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forkingThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        burningThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper#addingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper#burningThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper#retiringEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper#updatingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "dred-network-registry!~ManifestActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        retiringEntry: string;\n        updatingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        addingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forkingThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        burningThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelperNested_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2#addingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$addingEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2#burningThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2#retiringEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2#updatingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "dred-network-registry!ManifestActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        retiringEntry: string;\n        updatingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        addingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$addingEntryLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forkingThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        burningThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadTokenLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelperNested_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3#addingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3#burningThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3#retiringEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3#updatingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "dred-network-registry!~ManifestActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        retiringEntry: string;\n        updatingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        addingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forkingThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        burningThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelperNested_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4#addingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4#burningThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4#retiringEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4#updatingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "dred-network-registry!~ManifestActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        retiringEntry: string;\n        updatingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        addingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forkingThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        burningThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested#addingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested#burningThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested#retiringEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested#updatingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types. ### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestActivityHelperNested#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "dred-network-registry!~ManifestActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        retiringEntry: string;\n        updatingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        addingEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        forkingThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        burningThreadToken: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 15
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivityLike_2:type",
          "docComment": "/**\n * ManifestActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntryLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntryLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadTokenLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadTokenLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivityLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivityLike_3:type",
          "docComment": "/**\n * ManifestActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntryLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntryLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadTokenLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadTokenLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivityLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestActivityLike_4:type",
          "docComment": "/**\n * ManifestActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntryLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$updatingEntryLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntryLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$addingEntryLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadTokenLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$forkingThreadTokenLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadTokenLike",
              "canonicalReference": "dred-network-registry!~ManifestActivity$burningThreadTokenLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivityLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivityLike:type",
          "docComment": "/**\n * ManifestActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntryLike",
              "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntryLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntryLike",
              "canonicalReference": "dred-network-registry!ManifestActivity$addingEntryLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadTokenLike",
              "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadTokenLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadTokenLike",
              "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadTokenLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestActivityMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivityMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoDelegateHelpers\";\n    enumName: \"ManifestActivity\";\n}, {\n    retiringEntry: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityMeta",
              "canonicalReference": "dred-network-registry!ManifestActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"retiringEntry\", \"Constr#0\", \"singletonField\", /* implied wrapper { key: ... } for singleVariantField */ string, \"noSpecialFlags\">;\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityMeta",
              "canonicalReference": "dred-network-registry!ManifestActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"updatingEntry\", \"Constr#1\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "dred-network-registry!ManifestActivity$updatingEntry:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityMeta",
              "canonicalReference": "dred-network-registry!ManifestActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"addingEntry\", \"Constr#2\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "dred-network-registry!ManifestActivity$addingEntry:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityMeta",
              "canonicalReference": "dred-network-registry!ManifestActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"forkingThreadToken\", \"Constr#3\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "dred-network-registry!ManifestActivity$forkingThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityMeta",
              "canonicalReference": "dred-network-registry!ManifestActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"burningThreadToken\", \"Constr#4\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "dred-network-registry!ManifestActivity$burningThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestActivityMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 31
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType_2:type",
          "docComment": "/**\n * ManifestEntryType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType = "
            },
            {
              "kind": "Content",
              "text": "{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicy",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicy_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreads",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreads_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType_3:type",
          "docComment": "/**\n * ManifestEntryType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType = "
            },
            {
              "kind": "Content",
              "text": "{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicy",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicy_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreads",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreads_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType_4:type",
          "docComment": "/**\n * ManifestEntryType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType = "
            },
            {
              "kind": "Content",
              "text": "{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicy",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicy_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreads",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreads_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryType:type",
          "docComment": "/**\n * ManifestEntryType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType = "
            },
            {
              "kind": "Content",
              "text": "{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicy",
              "canonicalReference": "dred-network-registry!ManifestEntryType$DgDataPolicy:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreads",
              "canonicalReference": "dred-network-registry!ManifestEntryType$DelegateThreads:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreads_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreads_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreads_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreads_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreads_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreads_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryType$DelegateThreads:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!DelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreads",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DelegateThreadsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreadsLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DelegateThreadsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreadsLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DelegateThreadsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreadsLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryType$DelegateThreadsLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DelegateThreadsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreadsLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicy_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicy_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicy_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicy_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicy_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicy_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryType$DgDataPolicy:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicy",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DgDataPolicyLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicyLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DgDataPolicyLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicyLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DgDataPolicyLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicyLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryType$DgDataPolicyLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$DgDataPolicyLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicyLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DelegateThreads_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DelegateThreads_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DelegateThreads_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DelegateThreads_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DelegateThreads_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DelegateThreads_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DelegateThreads_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DelegateThreads_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryType$Ergo$DelegateThreads:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!ErgoDelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DelegateThreads",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DgDataPolicy_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DgDataPolicy_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DgDataPolicy_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DgDataPolicy_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DgDataPolicy_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DgDataPolicy_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryType$Ergo$DgDataPolicy_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~ErgoRelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DgDataPolicy_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryType$Ergo$DgDataPolicy:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "dred-network-registry!ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DgDataPolicy",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestEntryType*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestEntryTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestEntryTypeHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_2#DelegateThreads:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DelegateThreads\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateThreads(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "dred-network-registry!ManifestEntryType$DelegateThreadsLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateThreads"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_2#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DgDataPolicy\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "dred-network-registry!ManifestEntryType$DgDataPolicyLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        policyLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        idPrefix: string;\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_2#MerkleMembership:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleMembership\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleMembership(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleMembership",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_2#MerkleStateRoot:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleStateRoot\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#4***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleStateRoot(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleStateRoot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_2#NamedTokenRef:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.NamedTokenRef\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get NamedTokenRef(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NamedTokenRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType",
                  "canonicalReference": "dred-network-registry!ManifestEntryType:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        NamedTokenRef: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "dred-network-registry!ManifestEntryType$DgDataPolicyLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateThreads: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "dred-network-registry!ManifestEntryType$DelegateThreadsLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MerkleMembership: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MerkleStateRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 17
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestEntryType*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestEntryTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestEntryTypeHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_3#DelegateThreads:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DelegateThreads\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateThreads(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateThreads"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_3#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DgDataPolicy\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        policyLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        idPrefix: string;\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_3#MerkleMembership:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleMembership\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleMembership(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleMembership",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_3#MerkleStateRoot:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleStateRoot\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#4***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleStateRoot(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleStateRoot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_3#NamedTokenRef:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.NamedTokenRef\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get NamedTokenRef(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NamedTokenRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        NamedTokenRef: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateThreads: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MerkleMembership: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MerkleStateRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 17
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestEntryType*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestEntryTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestEntryTypeHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_4#DelegateThreads:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DelegateThreads\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateThreads(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateThreads"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_4#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DgDataPolicy\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        policyLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        idPrefix: string;\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_4#MerkleMembership:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleMembership\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleMembership(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleMembership",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_4#MerkleStateRoot:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleStateRoot\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#4***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleStateRoot(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleStateRoot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_4#NamedTokenRef:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.NamedTokenRef\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get NamedTokenRef(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NamedTokenRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        NamedTokenRef: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateThreads: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MerkleMembership: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MerkleStateRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 17
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestEntryType*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestEntryTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestEntryTypeHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper#DelegateThreads:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DelegateThreads\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateThreads(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateThreads"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DgDataPolicy\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        policyLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        idPrefix: string;\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper#MerkleMembership:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleMembership\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleMembership(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleMembership",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper#MerkleStateRoot:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleStateRoot\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#4***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleStateRoot(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleStateRoot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper#NamedTokenRef:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.NamedTokenRef\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get NamedTokenRef(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NamedTokenRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        NamedTokenRef: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataPolicy: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateThreads: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MerkleMembership: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MerkleStateRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 17
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_2:type",
          "docComment": "/**\n * ManifestEntryType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicyLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreadsLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryTypeLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_3:type",
          "docComment": "/**\n * ManifestEntryType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicyLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreadsLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryTypeLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_4:type",
          "docComment": "/**\n * ManifestEntryType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicyLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DgDataPolicyLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreadsLike",
              "canonicalReference": "dred-network-registry!~ManifestEntryType$DelegateThreadsLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryTypeLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryTypeLike:type",
          "docComment": "/**\n * ManifestEntryType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicyLike",
              "canonicalReference": "dred-network-registry!ManifestEntryType$DgDataPolicyLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreadsLike",
              "canonicalReference": "dred-network-registry!ManifestEntryType$DelegateThreadsLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryTypeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!ManifestEntryTypeMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryTypeMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoHelpers\";\n    enumName: \"ManifestEntryType\";\n}, {\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeMeta",
              "canonicalReference": "dred-network-registry!ManifestEntryTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"NamedTokenRef\", \"Constr#0\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeMeta",
              "canonicalReference": "dred-network-registry!ManifestEntryTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"DgDataPolicy\", \"Constr#1\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicy",
              "canonicalReference": "dred-network-registry!ManifestEntryType$DgDataPolicy:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeMeta",
              "canonicalReference": "dred-network-registry!ManifestEntryTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"DelegateThreads\", \"Constr#2\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreads",
              "canonicalReference": "dred-network-registry!ManifestEntryType$DelegateThreads:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeMeta",
              "canonicalReference": "dred-network-registry!ManifestEntryTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"MerkleMembership\", \"Constr#3\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryTypeMeta",
              "canonicalReference": "dred-network-registry!ManifestEntryTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"MerkleStateRoot\", \"Constr#4\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryTypeMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 33
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!minimalAnyData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type minimalAnyData = "
            },
            {
              "kind": "Reference",
              "text": "minimalData",
              "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AnyDataLike",
              "canonicalReference": "dred-network-registry!AnyDataLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "minimalAnyData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!minimalDgDataDetails:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type minimalDgDataDetails = "
            },
            {
              "kind": "Reference",
              "text": "minimalData",
              "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DgDataDetailsLike",
              "canonicalReference": "dred-network-registry!DgDataDetailsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "minimalDgDataDetails",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~minimalNeighborhoodData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type minimalNeighborhoodData = "
            },
            {
              "kind": "Reference",
              "text": "minimalData",
              "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoNeighborhoodData",
              "canonicalReference": "dred-network-registry!~ErgoNeighborhoodData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/NeighborhoodController.ts",
          "releaseTag": "Public",
          "name": "minimalNeighborhoodData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~minimalNodeRegistrationData_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type minimalNodeRegistrationData = "
            },
            {
              "kind": "Reference",
              "text": "minimalData",
              "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoNodeRegistrationData",
              "canonicalReference": "dred-network-registry!ErgoNodeRegistrationData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistryController.ts",
          "releaseTag": "Public",
          "name": "minimalNodeRegistrationData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!minimalNodeRegistrationData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type minimalNodeRegistrationData = "
            },
            {
              "kind": "Reference",
              "text": "minimalData",
              "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeRegistrationDataLike",
              "canonicalReference": "dred-network-registry!NodeRegistrationDataLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "minimalNodeRegistrationData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~minimalProtocolSettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type minimalProtocolSettings = "
            },
            {
              "kind": "Reference",
              "text": "minimalData",
              "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ProtocolSettingsLike",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "minimalProtocolSettings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~MintingActivity_2:type",
          "docComment": "/**\n * MintingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    SampleMintingActivity: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingFungibleTokens: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~MintingActivity_3:type",
          "docComment": "/**\n * MintingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingRecord: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~MintingActivity_4:type",
          "docComment": "/**\n * MintingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingRecord: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!MintingActivity:type",
          "docComment": "/**\n * MintingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingRecord: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MintingActivityHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_2#$seeded$CreatingRecord:member",
              "docComment": "/**\n * generates UplcData for ***\"DredNodeRegistryPolicy::MintingActivity.CreatingRecord\"***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function. ## Usage Access the activity-creator as a getter: `$seeded$CreatingRecord`\n *\n * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity, ...})` method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get $seeded$CreatingRecord(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_2#CreatingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"DredNodeRegistryPolicy::MintingActivity.CreatingRecord\"***, given a transaction-context (or direct arg) with a ***seed utxo***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. - to get a transaction context having the seed needed for this argument, see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass. - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId. - in a context providing an implicit seed utxo, use the `$seeded$CreatingRecord}` variant of this activity instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingRecord(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thingWithSeed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MintingActivityHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_3#$seeded$CreatingRecord:member",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodPolicy::MintingActivity.CreatingRecord\"***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function. ## Usage Access the activity-creator as a getter: `$seeded$CreatingRecord`\n *\n * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity, ...})` method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get $seeded$CreatingRecord(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_3#CreatingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodPolicy::MintingActivity.CreatingRecord\"***, given a transaction-context (or direct arg) with a ***seed utxo***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. - to get a transaction context having the seed needed for this argument, see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass. - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId. - in a context providing an implicit seed utxo, use the `$seeded$CreatingRecord}` variant of this activity instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingRecord(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thingWithSeed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MintingActivityHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_4#$seeded$CreatingRecord:member",
              "docComment": "/**\n * generates UplcData for ***\"ProtocolSettingsPolicy::MintingActivity.CreatingRecord\"***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function. ## Usage Access the activity-creator as a getter: `$seeded$CreatingRecord`\n *\n * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity, ...})` method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get $seeded$CreatingRecord(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_4#CreatingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"ProtocolSettingsPolicy::MintingActivity.CreatingRecord\"***, given a transaction-context (or direct arg) with a ***seed utxo***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. - to get a transaction context having the seed needed for this argument, see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass. - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId. - in a context providing an implicit seed utxo, use the `$seeded$CreatingRecord}` variant of this activity instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingRecord(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thingWithSeed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MintingActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper#MintingFungibleTokens:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MyMintSpendDelegate::MintingActivity.MintingFungibleTokens\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MintingFungibleTokens(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MintingFungibleTokens"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper#SampleMintingActivity:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"MyMintSpendDelegate::MintingActivity.SampleMintingActivity\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SampleMintingActivity(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SampleMintingActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivity",
                  "canonicalReference": "dred-network-registry!~MintingActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        SampleMintingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingFungibleTokens: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelperNested_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_2#$seeded$CreatingRecord:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::MintingActivity.CreatingRecord\"***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function. ## Usage Access the activity-creator as a getter: `$seeded$CreatingRecord`\n *\n * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity, ...})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get $seeded$CreatingRecord(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_2#CreatingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::MintingActivity.CreatingRecord\"***, given a transaction-context (or direct arg) with a ***seed utxo***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. - to get a transaction context having the seed needed for this argument, see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass. - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId. - in a context providing an implicit seed utxo, use the `$seeded$CreatingRecord}` variant of this activity instead\n *\n * ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingRecord(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thingWithSeed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelperNested_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_3#$seeded$CreatingRecord:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::MintingActivity.CreatingRecord\"***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function. ## Usage Access the activity-creator as a getter: `$seeded$CreatingRecord`\n *\n * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity, ...})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get $seeded$CreatingRecord(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_3#CreatingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::MintingActivity.CreatingRecord\"***, given a transaction-context (or direct arg) with a ***seed utxo***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. - to get a transaction context having the seed needed for this argument, see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass. - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId. - in a context providing an implicit seed utxo, use the `$seeded$CreatingRecord}` variant of this activity instead\n *\n * ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingRecord(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thingWithSeed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelperNested_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_4#$seeded$CreatingRecord:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::MintingActivity.CreatingRecord\"***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function. ## Usage Access the activity-creator as a getter: `$seeded$CreatingRecord`\n *\n * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity, ...})` method. ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get $seeded$CreatingRecord(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_4#CreatingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::MintingActivity.CreatingRecord\"***, given a transaction-context (or direct arg) with a ***seed utxo***\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. - to get a transaction context having the seed needed for this argument, see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass. - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId. - in a context providing an implicit seed utxo, use the `$seeded$CreatingRecord}` variant of this activity instead\n *\n * ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingRecord(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thingWithSeed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        CreatingRecord: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MintingActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested#MintingFungibleTokens:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::MintingActivity.MintingFungibleTokens\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MintingFungibleTokens(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MintingFungibleTokens"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested#SampleMintingActivity:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"MyMintSpendDelegate::MintingActivity.SampleMintingActivity\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SampleMintingActivity(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SampleMintingActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MintingActivityHelperNested#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivity",
                  "canonicalReference": "dred-network-registry!~MintingActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        SampleMintingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingFungibleTokens: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~MintingActivityLike_2:type",
          "docComment": "/**\n * MintingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    SampleMintingActivity: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingFungibleTokens: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivityLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~MintingActivityLike_3:type",
          "docComment": "/**\n * MintingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingRecord: /* implied wrapper { seed: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivityLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~MintingActivityLike_4:type",
          "docComment": "/**\n * MintingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingRecord: /* implied wrapper { seed: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivityLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!MintingActivityLike:type",
          "docComment": "/**\n * MintingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingRecord: /* implied wrapper { seed: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!MintingActivityMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivityMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"DredNodeRegistryPolicy\";\n    enumName: \"MintingActivity\";\n}, {\n    CreatingRecord: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintingActivityMeta",
              "canonicalReference": "dred-network-registry!MintingActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"CreatingRecord\", \"Constr#0\", \"singletonField\", /* implied wrapper { seed: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ", \"isSeededActivity\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "MintingActivityMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!MyMintSpendDelegate:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MyMintSpendDelegate extends "
            },
            {
              "kind": "Reference",
              "text": "BasicMintDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MyMintSpendDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!MyMintSpendDelegate#dataBridgeClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "MyMintSpendDelegateDataBridge",
                  "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!MyMintSpendDelegate#delegateName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!MyMintSpendDelegate#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDelegateBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge:class",
          "docComment": "/**\n * GENERATED data bridge for **BasicDelegate** script (defined in class ***MyMintSpendDelegateBundle***) main: **src/delegation/BasicDelegate.hl**, project: **stellar-contracts**\n *\n * @remarks\n *\n * - note that you may override `get dataBridgeName() { return \"...\" }` to customize the name of this bridge class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MyMintSpendDelegateDataBridge extends "
            },
            {
              "kind": "Reference",
              "text": "ContractDataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MyMintSpendDelegateDataBridge",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#activity:member",
              "docComment": "/**\n * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#datum:member",
              "docComment": "/**\n * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)*** for this contract script.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#DelegateActivity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#DelegateDatum:member",
              "docComment": "/**\n * this is the specific type of datum for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge.isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#readDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reader: "
                },
                {
                  "kind": "Reference",
                  "text": "MyMintSpendDelegateDataBridgeReader",
                  "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#types:member",
              "docComment": "/**\n * accessors for all the types defined in the `BasicDelegate` script\n *\n * @remarks\n *\n * - these accessors are used to generate UplcData for each type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "types: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateRole: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelper",
                  "canonicalReference": "dred-network-registry!~DelegateRoleHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelper",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelper",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelper",
                  "canonicalReference": "dred-network-registry!~SpendingActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelper",
                  "canonicalReference": "dred-network-registry!~MintingActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelper",
                  "canonicalReference": "dred-network-registry!~BurningActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateAction: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionHelper",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestEntryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeHelper",
                  "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingCharterChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChangeHelper",
                  "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cctx_CharterInputType: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeHelper",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        AnyData: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegationDetail: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tn: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RelativeDelegateLink: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            uutName: string;\n            delegateValidatorHash: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n            config: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateChange: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoManifestEntry: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            entryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            tokenName: number[];\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoCtx: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "dred-network-registry!~CapoCtxLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            charter: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 72
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#ᱺᱺAnyDataCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺAnyDataCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "dred-network-registry!~AnyData_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺAnyDataCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#ᱺᱺCapoCtxCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoCtxCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "dred-network-registry!~CapoCtx_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "dred-network-registry!~CapoCtxLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoCtxCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#ᱺᱺCapoManifestEntryCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoManifestEntryCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntry_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoManifestEntryCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#ᱺᱺDelegationDetailCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDelegationDetailCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "dred-network-registry!~DelegationDetail_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDelegationDetailCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#ᱺᱺPendingDelegateChangeCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺPendingDelegateChangeCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChange_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺPendingDelegateChangeCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge#ᱺᱺRelativeDelegateLinkCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺRelativeDelegateLinkCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺRelativeDelegateLinkCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MyMintSpendDelegateDataBridgeReader extends "
            },
            {
              "kind": "Reference",
              "text": "DataBridgeReaderClass",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MyMintSpendDelegateDataBridgeReader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MyMintSpendDelegateDataBridgeReader` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "MyMintSpendDelegateDataBridge",
                  "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ", isMainnet: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bridge",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isMainnet",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#AnyData:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **AnyData*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AnyData(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "dred-network-registry!~AnyData_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AnyData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#bridge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "MyMintSpendDelegateDataBridge",
                  "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bridge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#BurningActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **BurningActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BurningActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoBurningActivity",
                  "canonicalReference": "dred-network-registry!~ErgoBurningActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "BurningActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#CapoCtx:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoCtx*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoCtx(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "dred-network-registry!~CapoCtx_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoCtx"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#CapoLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoCapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#CapoManifestEntry:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoManifestEntry*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoManifestEntry(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntry_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoManifestEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#cctx_CharterInputType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **cctx_CharterInputType*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cctx_CharterInputType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ergocctx_CharterInputType",
                  "canonicalReference": "dred-network-registry!~Ergocctx_CharterInputType_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cctx_CharterInputType"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$Cip68RefToken",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegationDetail",
                  "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$capoStoredData",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#DelegateActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateActivity",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#DelegateDatum:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateDatum*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#DelegateLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#DelegateRole:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateRole*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateRole(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateRole",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateRole_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRole"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#DelegationDetail:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegationDetail*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegationDetail(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "dred-network-registry!~DelegationDetail_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegationDetail"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#ManifestActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestActivity",
                  "canonicalReference": "dred-network-registry!~ErgoManifestActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#ManifestEntryType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestEntryType*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestEntryType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestEntryType",
                  "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestEntryType"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#MintingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **MintingActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MintingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMintingActivity",
                  "canonicalReference": "dred-network-registry!~ErgoMintingActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MintingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#PendingCharterChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingCharterChange*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingCharterChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingCharterChange",
                  "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingCharterChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#PendingDelegateAction:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateAction*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateAction(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingDelegateAction",
                  "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateAction"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#PendingDelegateChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateChange*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChange_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#RelativeDelegateLink:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **RelativeDelegateLink*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RelativeDelegateLink(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RelativeDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~MyMintSpendDelegateDataBridgeReader#SpendingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **SpendingActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SpendingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoSpendingActivity",
                  "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SpendingActivity"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!NeighborhoodController:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class NeighborhoodController extends "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoNeighborhoodData",
              "canonicalReference": "dred-network-registry!~ErgoNeighborhoodData:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "NeighborhoodDataLike",
              "canonicalReference": "dred-network-registry!~NeighborhoodDataLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/NeighborhoodController.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "NeighborhoodController",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NeighborhoodController#capo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get capo(): "
                },
                {
                  "kind": "Reference",
                  "text": "DredCapo",
                  "canonicalReference": "dred-network-registry!DredCapo:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NeighborhoodController#dataBridgeClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodPolicyDataBridge",
                  "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NeighborhoodController#delegateName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!NeighborhoodController#exampleData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exampleData(): "
                },
                {
                  "kind": "Reference",
                  "text": "minimalNeighborhoodData",
                  "canonicalReference": "dred-network-registry!~minimalNeighborhoodData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "exampleData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NeighborhoodController#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!NeighborhoodController#mkTxnRegisteringNode:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnRegisteringNode(this: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodController",
                  "canonicalReference": "dred-network-registry!NeighborhoodController:class"
                },
                {
                  "kind": "Content",
                  "text": ", nodeReg: "
                },
                {
                  "kind": "Reference",
                  "text": "minimalNeighborhoodData",
                  "canonicalReference": "dred-network-registry!~minimalNeighborhoodData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "nodeReg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnRegisteringNode"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NeighborhoodController#recordTypeName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get recordTypeName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recordTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!NeighborhoodController#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<never, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "requirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!NeighborhoodController#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NeighborhoodData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NeighborhoodData = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    memberToken: string;\n    name: string;\n    description: string;\n    appInfo: "
            },
            {
              "kind": "Reference",
              "text": "AppInfo",
              "canonicalReference": "dred-network-registry!~AppInfo:type"
            },
            {
              "kind": "Content",
              "text": ";\n    opsInfo: "
            },
            {
              "kind": "Reference",
              "text": "NodeOpsInfo",
              "canonicalReference": "dred-network-registry!~NodeOpsInfo:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NeighborhoodData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NeighborhoodDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NeighborhoodDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    memberToken: string;\n    name: string;\n    description: string;\n    appInfo: "
            },
            {
              "kind": "Reference",
              "text": "AppInfoLike",
              "canonicalReference": "dred-network-registry!~AppInfoLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    opsInfo: "
            },
            {
              "kind": "Reference",
              "text": "NodeOpsInfoLike",
              "canonicalReference": "dred-network-registry!~NodeOpsInfoLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NeighborhoodDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge:class",
          "docComment": "/**\n * GENERATED data bridge for **BasicDelegate** script (defined in class ***NeighborhoodBundle***) main: **src/delegation/BasicDelegate.hl**, project: **stellar-contracts**\n *\n * @remarks\n *\n * - note that you may override `get dataBridgeName() { return \"...\" }` to customize the name of this bridge class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class NeighborhoodPolicyDataBridge extends "
            },
            {
              "kind": "Reference",
              "text": "ContractDataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "NeighborhoodPolicyDataBridge",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#activity:member",
              "docComment": "/**\n * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#datum:member",
              "docComment": "/**\n * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)*** for this contract script.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#DelegateActivity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#DelegateDatum:member",
              "docComment": "/**\n * this is the specific type of datum for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge.isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#readDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reader: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodPolicyDataBridgeReader",
                  "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#types:member",
              "docComment": "/**\n * accessors for all the types defined in the `BasicDelegate` script\n *\n * @remarks\n *\n * - these accessors are used to generate UplcData for each type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "types: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        FeeSource: "
                },
                {
                  "kind": "Reference",
                  "text": "FeeSourceHelper",
                  "canonicalReference": "dred-network-registry!~FeeSourceHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SubscriptionFeeFrequency: "
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionFeeFrequencyHelper",
                  "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RevenueModel: "
                },
                {
                  "kind": "Reference",
                  "text": "RevenueModelHelper",
                  "canonicalReference": "dred-network-registry!~RevenueModelHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateRole: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelper",
                  "canonicalReference": "dred-network-registry!~DelegateRoleHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelper",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelper",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelper",
                  "canonicalReference": "dred-network-registry!~SpendingActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelper",
                  "canonicalReference": "dred-network-registry!~MintingActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelper",
                  "canonicalReference": "dred-network-registry!~BurningActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateAction: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionHelper",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestEntryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeHelper",
                  "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingCharterChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChangeHelper",
                  "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cctx_CharterInputType: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeHelper",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dgd_DataSrc: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrcHelper",
                  "canonicalReference": "dred-network-registry!~dgd_DataSrcHelper_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        AnyData: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegationDetail: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tn: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        AppInfo: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "AppInfoLike",
                  "canonicalReference": "dred-network-registry!~AppInfoLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            url: string;\n            revenueModel: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RevenueModelLike",
                  "canonicalReference": "dred-network-registry!~RevenueModelLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        NodeOpsInfo: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOpsInfoLike",
                  "canonicalReference": "dred-network-registry!~NodeOpsInfoLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            minNodes: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            maxNodes: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            minNodeOperatorStake: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n                mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n                tokens: {\n                    name: number[] | string;\n                    qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n                }[];\n            }[];\n            minUptime: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        NeighborhoodData: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodDataLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n            memberToken: string;\n            name: string;\n            description: string;\n            appInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "AppInfoLike",
                  "canonicalReference": "dred-network-registry!~AppInfoLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            opsInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOpsInfoLike",
                  "canonicalReference": "dred-network-registry!~NodeOpsInfoLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RelativeDelegateLink: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            uutName: string;\n            delegateValidatorHash: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n            config: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateChange: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoManifestEntry: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            entryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            tokenName: number[];\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoCtx: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "dred-network-registry!~CapoCtxLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            charter: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        NeighborhoodSettings: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettingsLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            minRegistrationFee: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            minNbhStake: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n                mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n                tokens: {\n                    name: number[] | string;\n                    qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n                }[];\n            }[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        AbstractSettingsForNeighborhood: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractSettingsForNeighborhoodLike",
                  "canonicalReference": "dred-network-registry!~AbstractSettingsForNeighborhoodLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            NeighborhoodSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettingsLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataDetails: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetailsLike",
                  "canonicalReference": "dred-network-registry!~DgDataDetailsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            dataSrc: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrcLike",
                  "canonicalReference": "dred-network-registry!~dgd_DataSrcLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            id: number[];\n            type: string;\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 146
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺAbstractSettingsForNeighborhoodCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺAbstractSettingsForNeighborhoodCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AbstractSettingsForNeighborhood",
                  "canonicalReference": "dred-network-registry!~AbstractSettingsForNeighborhood:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractSettingsForNeighborhoodLike",
                  "canonicalReference": "dred-network-registry!~AbstractSettingsForNeighborhoodLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺAbstractSettingsForNeighborhoodCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺAnyDataCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺAnyDataCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "dred-network-registry!~AnyData_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺAnyDataCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺAppInfoCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺAppInfoCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AppInfo",
                  "canonicalReference": "dred-network-registry!~AppInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AppInfoLike",
                  "canonicalReference": "dred-network-registry!~AppInfoLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺAppInfoCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺCapoCtxCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoCtxCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "dred-network-registry!~CapoCtx_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "dred-network-registry!~CapoCtxLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoCtxCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺCapoManifestEntryCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoManifestEntryCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntry_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoManifestEntryCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺDelegationDetailCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDelegationDetailCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "dred-network-registry!~DelegationDetail_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDelegationDetailCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺDgDataDetailsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDgDataDetailsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetails",
                  "canonicalReference": "dred-network-registry!~DgDataDetails_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetailsLike",
                  "canonicalReference": "dred-network-registry!~DgDataDetailsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDgDataDetailsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺNeighborhoodDataCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺNeighborhoodDataCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodData",
                  "canonicalReference": "dred-network-registry!~NeighborhoodData:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodDataLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺNeighborhoodDataCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺNeighborhoodSettingsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺNeighborhoodSettingsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettings",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettings_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettingsLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺNeighborhoodSettingsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺNodeOpsInfoCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺNodeOpsInfoCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeOpsInfo",
                  "canonicalReference": "dred-network-registry!~NodeOpsInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOpsInfoLike",
                  "canonicalReference": "dred-network-registry!~NodeOpsInfoLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺNodeOpsInfoCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺPendingDelegateChangeCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺPendingDelegateChangeCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChange_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺPendingDelegateChangeCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge#ᱺᱺRelativeDelegateLinkCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺRelativeDelegateLinkCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺRelativeDelegateLinkCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class NeighborhoodPolicyDataBridgeReader extends "
            },
            {
              "kind": "Reference",
              "text": "DataBridgeReaderClass",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "NeighborhoodPolicyDataBridgeReader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `NeighborhoodPolicyDataBridgeReader` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodPolicyDataBridge",
                  "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ", isMainnet: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bridge",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isMainnet",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#AbstractSettingsForNeighborhood:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **AbstractSettingsForNeighborhood*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AbstractSettingsForNeighborhood(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractSettingsForNeighborhood",
                  "canonicalReference": "dred-network-registry!~AbstractSettingsForNeighborhood:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AbstractSettingsForNeighborhood"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#AnyData:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **AnyData*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AnyData(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "dred-network-registry!~AnyData_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AnyData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#AppInfo:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **AppInfo*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AppInfo(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AppInfo",
                  "canonicalReference": "dred-network-registry!~AppInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AppInfo"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#bridge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodPolicyDataBridge",
                  "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bridge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#BurningActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **BurningActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BurningActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoBurningActivity",
                  "canonicalReference": "dred-network-registry!~ErgoBurningActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "BurningActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#CapoCtx:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoCtx*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoCtx(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "dred-network-registry!~CapoCtx_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoCtx"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#CapoLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoCapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#CapoManifestEntry:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoManifestEntry*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoManifestEntry(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntry_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoManifestEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#cctx_CharterInputType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **cctx_CharterInputType*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cctx_CharterInputType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ergocctx_CharterInputType",
                  "canonicalReference": "dred-network-registry!~Ergocctx_CharterInputType_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cctx_CharterInputType"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$Cip68RefToken",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegationDetail",
                  "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$capoStoredData",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#DelegateActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateActivity",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#DelegateDatum:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateDatum*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#DelegateLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#DelegateRole:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateRole*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateRole(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateRole",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateRole_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRole"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#DelegationDetail:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegationDetail*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegationDetail(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "dred-network-registry!~DelegationDetail_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegationDetail"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#dgd_DataSrc:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **dgd_DataSrc*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dgd_DataSrc(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ergodgd_DataSrc",
                  "canonicalReference": "dred-network-registry!~Ergodgd_DataSrc_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dgd_DataSrc"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#DgDataDetails:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DgDataDetails*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataDetails(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetails",
                  "canonicalReference": "dred-network-registry!~DgDataDetails_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#FeeSource:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **FeeSource*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FeeSource(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoFeeSource",
                  "canonicalReference": "dred-network-registry!~ErgoFeeSource:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "FeeSource"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#ManifestActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestActivity",
                  "canonicalReference": "dred-network-registry!~ErgoManifestActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#ManifestEntryType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestEntryType*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestEntryType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestEntryType",
                  "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestEntryType"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#MintingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **MintingActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MintingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMintingActivity",
                  "canonicalReference": "dred-network-registry!~ErgoMintingActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MintingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#NeighborhoodData:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **NeighborhoodData*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NeighborhoodData(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodData",
                  "canonicalReference": "dred-network-registry!~NeighborhoodData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NeighborhoodData"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#NeighborhoodSettings:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **NeighborhoodSettings*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NeighborhoodSettings(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettings",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettings_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NeighborhoodSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#NodeOpsInfo:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **NodeOpsInfo*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NodeOpsInfo(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOpsInfo",
                  "canonicalReference": "dred-network-registry!~NodeOpsInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NodeOpsInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#PendingCharterChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingCharterChange*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingCharterChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingCharterChange",
                  "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingCharterChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#PendingDelegateAction:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateAction*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateAction(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingDelegateAction",
                  "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateAction"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#PendingDelegateChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateChange*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChange_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#RelativeDelegateLink:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **RelativeDelegateLink*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RelativeDelegateLink(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RelativeDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#RevenueModel:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **RevenueModel*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RevenueModel(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoRevenueModel",
                  "canonicalReference": "dred-network-registry!~ErgoRevenueModel:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RevenueModel"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#SpendingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **SpendingActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SpendingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoSpendingActivity",
                  "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SpendingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~NeighborhoodPolicyDataBridgeReader#SubscriptionFeeFrequency:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **SubscriptionFeeFrequency*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SubscriptionFeeFrequency(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoSubscriptionFeeFrequency",
                  "canonicalReference": "dred-network-registry!~ErgoSubscriptionFeeFrequency:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SubscriptionFeeFrequency"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NeighborhoodSettings_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NeighborhoodSettings = "
            },
            {
              "kind": "Content",
              "text": "{\n    minRegistrationFee: bigint;\n    minNbhStake: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NeighborhoodSettings_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NeighborhoodSettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NeighborhoodSettings = "
            },
            {
              "kind": "Content",
              "text": "{\n    minRegistrationFee: bigint;\n    minNbhStake: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NeighborhoodSettings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NeighborhoodSettingsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    minRegistrationFee: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    minNbhStake: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NeighborhoodSettingsLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NeighborhoodSettingsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    minRegistrationFee: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    minNbhStake: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NeighborhoodSettingsLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NodeOperatorSettings_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeOperatorSettings = "
            },
            {
              "kind": "Content",
              "text": "{\n    expectedHeartbeatInterval: bigint;\n    requiredNodeUptime: bigint;\n    minNodeRegistrationFee: bigint;\n    minNodeOperatorStake: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NodeOperatorSettings_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!NodeOperatorSettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeOperatorSettings = "
            },
            {
              "kind": "Content",
              "text": "{\n    expectedHeartbeatInterval: bigint;\n    requiredNodeUptime: bigint;\n    minNodeRegistrationFee: bigint;\n    minNodeOperatorStake: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NodeOperatorSettings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NodeOperatorSettingsLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeOperatorSettingsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    expectedHeartbeatInterval: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    requiredNodeUptime: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    minNodeRegistrationFee: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    minNodeOperatorStake: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NodeOperatorSettingsLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!NodeOperatorSettingsLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeOperatorSettingsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    expectedHeartbeatInterval: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    requiredNodeUptime: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    minNodeRegistrationFee: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    minNodeOperatorStake: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NodeOperatorSettingsLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NodeOpsInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeOpsInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    minNodes: bigint;\n    maxNodes: bigint;\n    minNodeOperatorStake: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n    minUptime: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NodeOpsInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~NodeOpsInfoLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeOpsInfoLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    minNodes: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    maxNodes: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    minNodeOperatorStake: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n    minUptime: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NodeOpsInfoLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!NodeRegistrationData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeRegistrationData = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    memberToken: string;\n    nodeAddress: string;\n    nodePort: bigint;\n    lastHeartbeat: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NodeRegistrationData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!NodeRegistrationDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeRegistrationDataLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    memberToken: string;\n    nodeAddress: string;\n    nodePort: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    lastHeartbeat: "
            },
            {
              "kind": "Reference",
              "text": "TimeLike",
              "canonicalReference": "dred-network-registry!~TimeLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "NodeRegistrationDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!NodeRegistryController:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class NodeRegistryController extends "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoNodeRegistrationData",
              "canonicalReference": "dred-network-registry!ErgoNodeRegistrationData:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "NodeRegistrationDataLike",
              "canonicalReference": "dred-network-registry!NodeRegistrationDataLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistryController.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "NodeRegistryController",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NodeRegistryController#capo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get capo(): "
                },
                {
                  "kind": "Reference",
                  "text": "DredCapo",
                  "canonicalReference": "dred-network-registry!DredCapo:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NodeRegistryController#dataBridgeClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "DredNodeRegistryPolicyDataBridge",
                  "canonicalReference": "dred-network-registry!~DredNodeRegistryPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NodeRegistryController#delegateName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!NodeRegistryController#exampleData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exampleData(): "
                },
                {
                  "kind": "Reference",
                  "text": "minimalNodeRegistrationData",
                  "canonicalReference": "dred-network-registry!~minimalNodeRegistrationData_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "exampleData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NodeRegistryController#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!NodeRegistryController#mkTxnRegisteringNode:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnRegisteringNode(this: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeRegistryController",
                  "canonicalReference": "dred-network-registry!NodeRegistryController:class"
                },
                {
                  "kind": "Content",
                  "text": ", nodeReg: "
                },
                {
                  "kind": "Reference",
                  "text": "minimalNodeRegistrationData",
                  "canonicalReference": "dred-network-registry!~minimalNodeRegistrationData_2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "nodeReg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnRegisteringNode"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!NodeRegistryController#recordTypeName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get recordTypeName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recordTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!NodeRegistryController#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<never, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "requirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!NodeRegistryController#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange_2:type",
          "docComment": "/**\n * PendingCharterChange enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChange",
              "canonicalReference": "dred-network-registry!~PendingDelegateChange_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChange_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange_3:type",
          "docComment": "/**\n * PendingCharterChange enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChange",
              "canonicalReference": "dred-network-registry!~PendingDelegateChange_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChange_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange_4:type",
          "docComment": "/**\n * PendingCharterChange enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChange",
              "canonicalReference": "dred-network-registry!~PendingDelegateChange_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChange",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChange_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingCharterChange:type",
          "docComment": "/**\n * PendingCharterChange enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChange",
              "canonicalReference": "dred-network-registry!PendingDelegateChange:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChange",
              "canonicalReference": "dred-network-registry!PendingCharterChange$otherManifestChange:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$Ergo$otherManifestChange_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$Ergo$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!~ErgoManifestActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$Ergo$otherManifestChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$Ergo$otherManifestChange_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$Ergo$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!~ErgoManifestActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$Ergo$otherManifestChange_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$Ergo$otherManifestChange_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$Ergo$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!~ErgoManifestActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$Ergo$otherManifestChange_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$Ergo$otherManifestChange_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$Ergo$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!~ErgoManifestActivity_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!~ErgoDelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$Ergo$otherManifestChange_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingCharterChange$Ergo$otherManifestChange:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$Ergo$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "dred-network-registry!ErgoManifestActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "dred-network-registry!ErgoDelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$Ergo$otherManifestChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChange_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!~ManifestActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChange_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!~ManifestActivity_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChange_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChange_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!~ManifestActivity_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChange_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingCharterChange$otherManifestChange:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "dred-network-registry!ManifestActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!DelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$otherManifestChangeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "dred-network-registry!~ManifestActivityLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChangeLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$otherManifestChangeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "dred-network-registry!~ManifestActivityLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChangeLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$otherManifestChangeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "dred-network-registry!~ManifestActivityLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChangeLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingCharterChange$otherManifestChangeLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$otherManifestChangeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "dred-network-registry!ManifestActivityLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChangeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingCharterChange*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingCharterChangeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingCharterChangeHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_2#delegateChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.delegateChange\"***\n *\n * @remarks\n *\n * - ***PendingDelegateChangeLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateChange(change: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateChangeLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateActionLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "change",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_2#otherManifestChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.otherManifestChange\"***\n *\n * @remarks\n *\n * - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherManifestChange(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "dred-network-registry!PendingCharterChange$otherManifestChangeLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        activity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!ManifestActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        remainingDelegateValidations: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "otherManifestChange"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange",
                  "canonicalReference": "dred-network-registry!PendingCharterChange:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        delegateChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateChangeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherManifestChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "dred-network-registry!PendingCharterChange$otherManifestChangeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingCharterChange*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingCharterChangeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingCharterChangeHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_3#delegateChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.delegateChange\"***\n *\n * @remarks\n *\n * - ***PendingDelegateChangeLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateChange(change: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "change",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_3#otherManifestChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.otherManifestChange\"***\n *\n * @remarks\n *\n * - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherManifestChange(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        activity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        remainingDelegateValidations: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "otherManifestChange"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        delegateChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherManifestChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingCharterChange*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingCharterChangeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingCharterChangeHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_4#delegateChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.delegateChange\"***\n *\n * @remarks\n *\n * - ***PendingDelegateChangeLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateChange(change: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "change",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_4#otherManifestChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.otherManifestChange\"***\n *\n * @remarks\n *\n * - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherManifestChange(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        activity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        remainingDelegateValidations: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "otherManifestChange"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        delegateChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherManifestChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingCharterChange*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingCharterChangeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingCharterChangeHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper#delegateChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.delegateChange\"***\n *\n * @remarks\n *\n * - ***PendingDelegateChangeLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateChange(change: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "change",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper#otherManifestChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.otherManifestChange\"***\n *\n * @remarks\n *\n * - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherManifestChange(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        activity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "dred-network-registry!~ManifestActivityLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        remainingDelegateValidations: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "otherManifestChange"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        delegateChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherManifestChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChangeLike_2:type",
          "docComment": "/**\n * PendingCharterChange enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChangeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChangeLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChangeLike",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChangeLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChangeLike_3:type",
          "docComment": "/**\n * PendingCharterChange enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChangeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChangeLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChangeLike",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChangeLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingCharterChangeLike_4:type",
          "docComment": "/**\n * PendingCharterChange enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChangeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChangeLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChangeLike",
              "canonicalReference": "dred-network-registry!~PendingCharterChange$otherManifestChangeLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChangeLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingCharterChangeLike:type",
          "docComment": "/**\n * PendingCharterChange enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChangeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChangeLike",
              "canonicalReference": "dred-network-registry!PendingDelegateChangeLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChangeLike",
              "canonicalReference": "dred-network-registry!PendingCharterChange$otherManifestChangeLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChangeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingCharterChangeMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChangeMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoDelegateHelpers\";\n    enumName: \"PendingCharterChange\";\n}, {\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChangeMeta",
              "canonicalReference": "dred-network-registry!PendingCharterChangeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"delegateChange\", \"Constr#0\", \"singletonField\", /* implied wrapper { change: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChange",
              "canonicalReference": "dred-network-registry!PendingDelegateChange:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChangeMeta",
              "canonicalReference": "dred-network-registry!PendingCharterChangeMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"otherManifestChange\", \"Constr#1\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChange",
              "canonicalReference": "dred-network-registry!PendingCharterChange$otherManifestChange:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChangeMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction_2:type",
          "docComment": "/**\n * PendingDelegateAction enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction = "
            },
            {
              "kind": "Content",
              "text": "{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction_3:type",
          "docComment": "/**\n * PendingDelegateAction enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction = "
            },
            {
              "kind": "Content",
              "text": "{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction_4:type",
          "docComment": "/**\n * PendingDelegateAction enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction = "
            },
            {
              "kind": "Content",
              "text": "{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateAction:type",
          "docComment": "/**\n * PendingDelegateAction enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction = "
            },
            {
              "kind": "Content",
              "text": "{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$Add:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$Replace:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Add = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Add_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Add = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Add_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Add = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Add_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Add = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Add_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateAction$Add:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Add = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Add",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$AddLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$AddLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$AddLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$AddLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$AddLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$AddLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateAction$AddLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$AddLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n    idPrefix: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$AddLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Add_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Add = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Add_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Add_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Add = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Add_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Add_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Add = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Add_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Add_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Add = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Add_5:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Add_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateAction$Ergo$Add:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Add = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$Add:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Add",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Replace_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Replace = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_2:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Replace_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Replace_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Replace = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_3:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Replace_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Replace_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Replace = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_4:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Replace_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Ergo$Replace_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Replace = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_5:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Replace_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateAction$Ergo$Replace:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Replace = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$Replace:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Replace",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Replace = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Replace_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Replace = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Replace_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Replace = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Replace_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$Replace_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Replace = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Replace_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateAction$Replace:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Replace = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Replace",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$ReplaceLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": " | string | [string | "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | number[], string | number[]] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokenName: string | number[];\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$ReplaceLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$ReplaceLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": " | string | [string | "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | number[], string | number[]] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokenName: string | number[];\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$ReplaceLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$ReplaceLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": " | string | [string | "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | number[], string | number[]] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokenName: string | number[];\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$ReplaceLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateAction$ReplaceLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$ReplaceLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n    purpose: string;\n    idPrefix: string;\n    replacesDgt: "
            },
            {
              "kind": "Reference",
              "text": "AssetClass",
              "canonicalReference": "@helios-lang/ledger!AssetClass:type"
            },
            {
              "kind": "Content",
              "text": " | string | [string | "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | number[], string | number[]] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokenName: string | number[];\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$ReplaceLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingDelegateAction*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingDelegateActionHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingDelegateActionHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2#$seeded$Add:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$Add({ purpose, idPrefix })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Add: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Add",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2#$seeded$Replace:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \\{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\\} \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Replace: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Replace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 20
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2#Add:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Add}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2#Add:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateAction$AddLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2#Remove:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Remove\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Remove(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Remove",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2#Replace:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Replace}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2#Replace:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateAction$ReplaceLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction",
                  "canonicalReference": "dred-network-registry!PendingDelegateAction:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Add: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateAction$AddLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Remove: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Replace: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "dred-network-registry!PendingDelegateAction$ReplaceLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingDelegateAction*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingDelegateActionHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingDelegateActionHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3#$seeded$Add:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$Add({ purpose, idPrefix })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Add: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Add",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3#$seeded$Replace:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \\{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\\} \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Replace: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Replace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 20
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3#Add:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Add}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3#Add:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3#Remove:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Remove\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Remove(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Remove",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3#Replace:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Replace}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3#Replace:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction_3:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Add: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Remove: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Replace: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_3:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingDelegateAction*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingDelegateActionHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingDelegateActionHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4#$seeded$Add:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$Add({ purpose, idPrefix })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Add: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Add",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4#$seeded$Replace:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \\{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\\} \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Replace: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Replace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 20
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4#Add:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Add}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4#Add:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4#Remove:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Remove\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Remove(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Remove",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4#Replace:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Replace}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4#Replace:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Add: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Remove: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Replace: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingDelegateAction*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingDelegateActionHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingDelegateActionHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper#$seeded$Add:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$Add({ purpose, idPrefix })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Add: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Add",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper#$seeded$Replace:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***,\n *\n * @remarks\n *\n * ### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * ## Usage 1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \\{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\\} \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Replace: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Replace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 20
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper#Add:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Add}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper#Add:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper#Remove:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Remove\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Remove(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Remove",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper#Replace:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Replace}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper#Replace:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Add: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Remove: "
                },
                {
                  "kind": "Reference",
                  "text": "tagOnly",
                  "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Replace: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_2:type",
          "docComment": "/**\n * PendingDelegateAction enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateActionLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$AddLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$ReplaceLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateActionLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_3:type",
          "docComment": "/**\n * PendingDelegateAction enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateActionLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$AddLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$ReplaceLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateActionLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_4:type",
          "docComment": "/**\n * PendingDelegateAction enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateActionLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$AddLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$AddLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$ReplaceLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction$ReplaceLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateActionLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateActionLike:type",
          "docComment": "/**\n * PendingDelegateAction enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateActionLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$AddLike",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$AddLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$ReplaceLike",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$ReplaceLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateActionLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateActionMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateActionMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"CapoDelegateHelpers\";\n    enumName: \"PendingDelegateAction\";\n}, {\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateActionMeta",
              "canonicalReference": "dred-network-registry!PendingDelegateActionMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Add\", \"Constr#0\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$Add:type"
            },
            {
              "kind": "Content",
              "text": ", \"isSeededActivity\">;\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateActionMeta",
              "canonicalReference": "dred-network-registry!PendingDelegateActionMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Remove\", \"Constr#1\", \"tagOnly\", "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ", \"noSpecialFlags\">;\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateActionMeta",
              "canonicalReference": "dred-network-registry!PendingDelegateActionMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"Replace\", \"Constr#2\", \"fields\", "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "dred-network-registry!PendingDelegateAction$Replace:type"
            },
            {
              "kind": "Content",
              "text": ", \"isSeededActivity\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateActionMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 21
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateChange_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateChange_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChange_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateChange_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction",
              "canonicalReference": "dred-network-registry!~PendingDelegateAction_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!~DelegateRole_5:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChange_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateChange:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction",
              "canonicalReference": "dred-network-registry!PendingDelegateAction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "dred-network-registry!DelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "dred-network-registry!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateChangeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateActionLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChangeLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateChangeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateActionLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_3:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChangeLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateChangeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateActionLike",
              "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChangeLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!PendingDelegateChangeLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateChangeLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateActionLike",
              "canonicalReference": "dred-network-registry!PendingDelegateActionLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "dred-network-registry!DelegateRoleLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLinkLike",
              "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChangeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ProtocolSettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ProtocolSettings = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    nodeOpSettings: "
            },
            {
              "kind": "Reference",
              "text": "NodeOperatorSettings",
              "canonicalReference": "dred-network-registry!~NodeOperatorSettings_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    nbhSettings: "
            },
            {
              "kind": "Reference",
              "text": "NeighborhoodSettings",
              "canonicalReference": "dred-network-registry!~NeighborhoodSettings:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ProtocolSettings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!ProtocolSettingsController:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ProtocolSettingsController extends "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ProtocolSettings",
              "canonicalReference": "dred-network-registry!~ProtocolSettings:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ProtocolSettingsLike",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettingsController.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ProtocolSettingsController",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#capo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get capo(): "
                },
                {
                  "kind": "Reference",
                  "text": "DredCapo",
                  "canonicalReference": "dred-network-registry!DredCapo:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#dataBridgeClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettingsDataBridge",
                  "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#delegateName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#exampleData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exampleData(): "
                },
                {
                  "kind": "Reference",
                  "text": "minimalProtocolSettings",
                  "canonicalReference": "dred-network-registry!~minimalProtocolSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "exampleData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get idPrefix(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#initialSettingsData:member(1)",
              "docComment": "/**\n * creates settings data with minting-policy hashes prepared for each membership tier\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialSettingsData(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "minimalProtocolSettings",
                  "canonicalReference": "dred-network-registry!~minimalProtocolSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialSettingsData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#recordTypeName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get recordTypeName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recordTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<never, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "requirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!ProtocolSettingsController#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~ProtocolSettingsLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ProtocolSettingsLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    nodeOpSettings: "
            },
            {
              "kind": "Reference",
              "text": "NodeOperatorSettingsLike",
              "canonicalReference": "dred-network-registry!~NodeOperatorSettingsLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    nbhSettings: "
            },
            {
              "kind": "Reference",
              "text": "NeighborhoodSettingsLike",
              "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "ProtocolSettingsLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge:class",
          "docComment": "/**\n * GENERATED data bridge for **BasicDelegate** script (defined in class ***ProtocolSettingsBundle***) main: **src/delegation/BasicDelegate.hl**, project: **stellar-contracts**\n *\n * @remarks\n *\n * - note that you may override `get dataBridgeName() { return \"...\" }` to customize the name of this bridge class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ProtocolSettingsPolicyDataBridge extends "
            },
            {
              "kind": "Reference",
              "text": "ContractDataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ProtocolSettingsPolicyDataBridge",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#activity:member",
              "docComment": "/**\n * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#datum:member",
              "docComment": "/**\n * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)*** for this contract script.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#DelegateActivity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#DelegateDatum:member",
              "docComment": "/**\n * this is the specific type of datum for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge.isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#readDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reader: "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettingsPolicyDataBridgeReader",
                  "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#types:member",
              "docComment": "/**\n * accessors for all the types defined in the `BasicDelegate` script\n *\n * @remarks\n *\n * - these accessors are used to generate UplcData for each type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "types: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "dred-network-registry!~DelegateDatumHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateRole: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelper",
                  "canonicalReference": "dred-network-registry!~DelegateRoleHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelper",
                  "canonicalReference": "dred-network-registry!~ManifestActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelper",
                  "canonicalReference": "dred-network-registry!~CapoLifecycleActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateLifecycleActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelper",
                  "canonicalReference": "dred-network-registry!~SpendingActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelper",
                  "canonicalReference": "dred-network-registry!~MintingActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelper",
                  "canonicalReference": "dred-network-registry!~BurningActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "dred-network-registry!~DelegateActivityHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateAction: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionHelper",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestEntryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeHelper",
                  "canonicalReference": "dred-network-registry!~ManifestEntryTypeHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingCharterChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChangeHelper",
                  "canonicalReference": "dred-network-registry!~PendingCharterChangeHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cctx_CharterInputType: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeHelper",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeHelper_4:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        AnyData: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegationDetail: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tn: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        NodeOperatorSettings: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettingsLike",
                  "canonicalReference": "dred-network-registry!~NodeOperatorSettingsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            expectedHeartbeatInterval: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            requiredNodeUptime: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            minNodeRegistrationFee: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            minNodeOperatorStake: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n                mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n                tokens: {\n                    name: number[] | string;\n                    qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n                }[];\n            }[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        NeighborhoodSettings: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettingsLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            minRegistrationFee: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            minNbhStake: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n                mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n                tokens: {\n                    name: number[] | string;\n                    qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n                }[];\n            }[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ProtocolSettings: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettingsLike",
                  "canonicalReference": "dred-network-registry!~ProtocolSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n            nodeOpSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettingsLike",
                  "canonicalReference": "dred-network-registry!~NodeOperatorSettingsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            nbhSettings: "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettingsLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RelativeDelegateLink: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            uutName: string;\n            delegateValidatorHash: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n            config: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateChange: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateActionLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "dred-network-registry!~DelegateRoleLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoManifestEntry: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            entryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeLike",
                  "canonicalReference": "dred-network-registry!~ManifestEntryTypeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            tokenName: number[];\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoCtx: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "dred-network-registry!~CapoCtxLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            charter: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeLike",
                  "canonicalReference": "dred-network-registry!~cctx_CharterInputTypeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 116
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺAnyDataCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺAnyDataCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "dred-network-registry!~AnyData_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "dred-network-registry!~AnyDataLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺAnyDataCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺCapoCtxCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoCtxCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "dred-network-registry!~CapoCtx_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "dred-network-registry!~CapoCtxLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoCtxCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺCapoManifestEntryCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoManifestEntryCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntry_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntryLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoManifestEntryCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺDelegationDetailCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDelegationDetailCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "dred-network-registry!~DelegationDetail_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "dred-network-registry!~DelegationDetailLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDelegationDetailCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺNeighborhoodSettingsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺNeighborhoodSettingsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettings",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettingsLike",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettingsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺNeighborhoodSettingsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺNodeOperatorSettingsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺNodeOperatorSettingsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettings",
                  "canonicalReference": "dred-network-registry!~NodeOperatorSettings_2:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettingsLike",
                  "canonicalReference": "dred-network-registry!~NodeOperatorSettingsLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺNodeOperatorSettingsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺPendingDelegateChangeCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺPendingDelegateChangeCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChange_4:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChangeLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺPendingDelegateChangeCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺProtocolSettingsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺProtocolSettingsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettings",
                  "canonicalReference": "dred-network-registry!~ProtocolSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettingsLike",
                  "canonicalReference": "dred-network-registry!~ProtocolSettingsLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺProtocolSettingsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge#ᱺᱺRelativeDelegateLinkCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺRelativeDelegateLinkCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺRelativeDelegateLinkCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ProtocolSettingsPolicyDataBridgeReader extends "
            },
            {
              "kind": "Reference",
              "text": "DataBridgeReaderClass",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ProtocolSettingsPolicyDataBridgeReader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ProtocolSettingsPolicyDataBridgeReader` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettingsPolicyDataBridge",
                  "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ", isMainnet: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bridge",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isMainnet",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#AnyData:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **AnyData*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AnyData(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "dred-network-registry!~AnyData_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AnyData"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#bridge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettingsPolicyDataBridge",
                  "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bridge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#BurningActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **BurningActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BurningActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoBurningActivity",
                  "canonicalReference": "dred-network-registry!~ErgoBurningActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "BurningActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#CapoCtx:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoCtx*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoCtx(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "dred-network-registry!~CapoCtx_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoCtx"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#CapoLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoCapoLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~ErgoCapoLifecycleActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#CapoManifestEntry:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoManifestEntry*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoManifestEntry(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "dred-network-registry!~CapoManifestEntry_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoManifestEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#cctx_CharterInputType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **cctx_CharterInputType*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cctx_CharterInputType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ergocctx_CharterInputType",
                  "canonicalReference": "dred-network-registry!~Ergocctx_CharterInputType_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cctx_CharterInputType"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$Cip68RefToken",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$Cip68RefToken_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegationDetail",
                  "canonicalReference": "dred-network-registry!~ErgoDelegationDetail_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$capoStoredData",
                  "canonicalReference": "dred-network-registry!~DelegateDatum$Ergo$capoStoredData_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#DelegateActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateActivity",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#DelegateDatum:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateDatum*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateDatum_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#DelegateLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateLifecycleActivity",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateLifecycleActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#DelegateRole:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateRole*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateRole(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateRole",
                  "canonicalReference": "dred-network-registry!~ErgoDelegateRole_5:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRole"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#DelegationDetail:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegationDetail*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegationDetail(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "dred-network-registry!~DelegationDetail_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegationDetail"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#ManifestActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestActivity",
                  "canonicalReference": "dred-network-registry!~ErgoManifestActivity_5:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#ManifestEntryType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestEntryType*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestEntryType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestEntryType",
                  "canonicalReference": "dred-network-registry!~ErgoManifestEntryType_5:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestEntryType"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#MintingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **MintingActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MintingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMintingActivity",
                  "canonicalReference": "dred-network-registry!~ErgoMintingActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MintingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#NeighborhoodSettings:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **NeighborhoodSettings*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NeighborhoodSettings(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NeighborhoodSettings",
                  "canonicalReference": "dred-network-registry!~NeighborhoodSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NeighborhoodSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#NodeOperatorSettings:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **NodeOperatorSettings*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NodeOperatorSettings(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeOperatorSettings",
                  "canonicalReference": "dred-network-registry!~NodeOperatorSettings_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NodeOperatorSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#PendingCharterChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingCharterChange*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingCharterChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingCharterChange",
                  "canonicalReference": "dred-network-registry!~ErgoPendingCharterChange_5:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingCharterChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#PendingDelegateAction:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateAction*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateAction(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingDelegateAction",
                  "canonicalReference": "dred-network-registry!~ErgoPendingDelegateAction_5:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateAction"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#PendingDelegateChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateChange*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "dred-network-registry!~PendingDelegateChange_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#ProtocolSettings:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ProtocolSettings*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProtocolSettings(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ProtocolSettings",
                  "canonicalReference": "dred-network-registry!~ProtocolSettings:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ProtocolSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#RelativeDelegateLink:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **RelativeDelegateLink*** struct type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RelativeDelegateLink(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RelativeDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~ProtocolSettingsPolicyDataBridgeReader#SpendingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **SpendingActivity*** enum type, for the BasicDelegate script. ### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SpendingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoSpendingActivity",
                  "canonicalReference": "dred-network-registry!~ErgoSpendingActivity_4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SpendingActivity"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RelativeDelegateLink_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLink = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredCapo.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLink_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RelativeDelegateLink_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLink = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLink_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RelativeDelegateLink_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLink = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLink_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RelativeDelegateLink_5:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLink = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLink_5",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!RelativeDelegateLink:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLink = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLink",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLinkLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[] | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLinkLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_3:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLinkLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[] | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLinkLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RelativeDelegateLinkLike_4:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLinkLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[] | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLinkLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!RelativeDelegateLinkLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLinkLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    delegateValidatorHash: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[] | undefined;\n    config: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLinkLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RevenueModel:type",
          "docComment": "/**\n * RevenueModel enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the RevenueModel enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `RevenueModelHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RevenueModel = "
            },
            {
              "kind": "Content",
              "text": "{\n    TransactionBased: "
            },
            {
              "kind": "Reference",
              "text": "RevenueModel$TransactionBased",
              "canonicalReference": "dred-network-registry!~RevenueModel$TransactionBased:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Subscription: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SubscriptionFeeFrequency",
              "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequency:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RevenueModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RevenueModel$Ergo$TransactionBased:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RevenueModel$Ergo$TransactionBased = "
            },
            {
              "kind": "Content",
              "text": "{\n    minTxFee: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n    maxTxFee: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    chargeTo: "
            },
            {
              "kind": "Reference",
              "text": "ErgoFeeSource",
              "canonicalReference": "dred-network-registry!~ErgoFeeSource:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RevenueModel$Ergo$TransactionBased",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RevenueModel$TransactionBased:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RevenueModel$TransactionBased = "
            },
            {
              "kind": "Content",
              "text": "{\n    minTxFee: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n    maxTxFee: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    chargeTo: "
            },
            {
              "kind": "Reference",
              "text": "FeeSource",
              "canonicalReference": "dred-network-registry!~FeeSource:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RevenueModel$TransactionBased",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RevenueModel$TransactionBasedLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RevenueModel$TransactionBasedLike = "
            },
            {
              "kind": "Content",
              "text": "{\n    minTxFee: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n    maxTxFee: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[] | undefined;\n    chargeTo: "
            },
            {
              "kind": "Reference",
              "text": "FeeSourceLike",
              "canonicalReference": "dred-network-registry!~FeeSourceLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RevenueModel$TransactionBasedLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 24
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~RevenueModelHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***RevenueModel*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class RevenueModelHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "RevenueModelHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~RevenueModelHelper#Subscription:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodData::RevenueModel.Subscription\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Subscription(subscriptionFee: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionFeeFrequencyLike",
                  "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subscriptionFee",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Subscription"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~RevenueModelHelper#TransactionBased:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodData::RevenueModel.TransactionBased\"***\n *\n * @remarks\n *\n * - ***RevenueModel$TransactionBasedLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TransactionBased(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "RevenueModel$TransactionBasedLike",
                  "canonicalReference": "dred-network-registry!~RevenueModel$TransactionBasedLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        minTxFee: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokens: {\n                name: number[] | string;\n                qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            }[];\n        }[];\n        maxTxFee: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokens: {\n                name: number[] | string;\n                qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            }[];\n        }[] | undefined;\n        chargeTo: "
                },
                {
                  "kind": "Reference",
                  "text": "FeeSourceLike",
                  "canonicalReference": "dred-network-registry!~FeeSourceLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 26,
                "endIndex": 27
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 25
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "TransactionBased"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~RevenueModelHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RevenueModel",
                  "canonicalReference": "dred-network-registry!~RevenueModel:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        TransactionBased: "
                },
                {
                  "kind": "Reference",
                  "text": "RevenueModel$TransactionBasedLike",
                  "canonicalReference": "dred-network-registry!~RevenueModel$TransactionBasedLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        Subscription: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionFeeFrequencyLike",
                  "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 13
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~RevenueModelLike:type",
          "docComment": "/**\n * RevenueModel enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the RevenueModel enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `RevenueModelHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RevenueModelLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    TransactionBased: "
            },
            {
              "kind": "Reference",
              "text": "RevenueModel$TransactionBasedLike",
              "canonicalReference": "dred-network-registry!~RevenueModel$TransactionBasedLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Subscription: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SubscriptionFeeFrequencyLike",
              "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyLike:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "RevenueModelLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~SpendingActivity_2:type",
          "docComment": "/**\n * SpendingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    SampleSpendingActivity: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~SpendingActivity_3:type",
          "docComment": "/**\n * SpendingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    UpdatingRecord: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~SpendingActivity_4:type",
          "docComment": "/**\n * SpendingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    UpdatingRecord: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!SpendingActivity:type",
          "docComment": "/**\n * SpendingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **1 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    UpdatingRecord: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SpendingActivityHelper_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelper_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelper_2#UpdatingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"DredNodeRegistryPolicy::SpendingActivity.UpdatingRecord\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelper_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SpendingActivityHelper_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelper_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelper_3#UpdatingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodPolicy::SpendingActivity.UpdatingRecord\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelper_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SpendingActivityHelper_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelper_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelper_4#UpdatingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"ProtocolSettingsPolicy::SpendingActivity.UpdatingRecord\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelper_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SpendingActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelper#SampleSpendingActivity:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MyMintSpendDelegate::SpendingActivity.SampleSpendingActivity\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SampleSpendingActivity(recId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "recId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SampleSpendingActivity"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        SampleSpendingActivity: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        SampleSpendingActivity: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_2:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelperNested_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_2#UpdatingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"DredNodeRegistryPolicy::SpendingActivity.UpdatingRecord\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_2#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_3:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelperNested_3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_3#UpdatingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"NeighborhoodPolicy::SpendingActivity.UpdatingRecord\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_3#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_4:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelperNested_4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_4#UpdatingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"ProtocolSettingsPolicy::SpendingActivity.UpdatingRecord\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested_4#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        UpdatingRecord: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested#SampleSpendingActivity:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MyMintSpendDelegate::SpendingActivity.SampleSpendingActivity\"*** ## Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SampleSpendingActivity(recId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "recId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SampleSpendingActivity"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SpendingActivityHelperNested#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        SampleSpendingActivity: number[];\n    }, "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        SampleSpendingActivity: number[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~SpendingActivityLike_2:type",
          "docComment": "/**\n * SpendingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    SampleSpendingActivity: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MyMintSpendDelegate.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivityLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~SpendingActivityLike_3:type",
          "docComment": "/**\n * SpendingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    UpdatingRecord: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivityLike_3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~SpendingActivityLike_4:type",
          "docComment": "/**\n * SpendingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    UpdatingRecord: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/settings/ProtocolSettings.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivityLike_4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!SpendingActivityLike:type",
          "docComment": "/**\n * SpendingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **1 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    UpdatingRecord: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!SpendingActivityMeta:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivityMeta = "
            },
            {
              "kind": "Reference",
              "text": "EnumTypeMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumTypeMeta:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    module: \"DredNodeRegistryPolicy\";\n    enumName: \"SpendingActivity\";\n}, {\n    UpdatingRecord: "
            },
            {
              "kind": "Reference",
              "text": "singleEnumVariantMeta",
              "canonicalReference": "@donecollectively/stellar-contracts!singleEnumVariantMeta:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SpendingActivityMeta",
              "canonicalReference": "dred-network-registry!SpendingActivityMeta:type"
            },
            {
              "kind": "Content",
              "text": ", \"UpdatingRecord\", \"Constr#0\", \"singletonField\", /* implied wrapper { id: ... } for singleVariantField */ number[], \"noSpecialFlags\">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SpendingActivityMeta",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequency:type",
          "docComment": "/**\n * SubscriptionFeeFrequency enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the SubscriptionFeeFrequency enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SubscriptionFeeFrequencyHelper` class for generating UPLC data for this enum type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SubscriptionFeeFrequency = "
            },
            {
              "kind": "Content",
              "text": "{\n    Epoch: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Monthly: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Yearly: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SubscriptionFeeFrequency",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SubscriptionFeeFrequency*** enum type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SubscriptionFeeFrequencyHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SubscriptionFeeFrequencyHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyHelper#Epoch:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodData::SubscriptionFeeFrequency.Epoch\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Epoch(fee: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }[];\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fee",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Epoch"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyHelper#Monthly:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodData::SubscriptionFeeFrequency.Monthly\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Monthly(fee: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }[];\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fee",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Monthly"
            },
            {
              "kind": "Method",
              "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyHelper#Yearly:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"NeighborhoodData::SubscriptionFeeFrequency.Yearly\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Yearly(fee: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }[];\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fee",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Yearly"
            },
            {
              "kind": "Property",
              "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyHelper#ᱺᱺcast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionFeeFrequency",
                  "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequency:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Epoch: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokens: {\n                name: number[] | string;\n                qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            }[];\n        }[];\n        Monthly: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokens: {\n                name: number[] | string;\n                qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            }[];\n        }[];\n        Yearly: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokens: {\n                name: number[] | string;\n                qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            }[];\n        }[];\n    }>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 37
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~SubscriptionFeeFrequencyLike:type",
          "docComment": "/**\n * SubscriptionFeeFrequency enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the SubscriptionFeeFrequency enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SubscriptionFeeFrequencyHelper` class for generating UPLC data for this enum type\n *\n * ### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SubscriptionFeeFrequencyLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Epoch: /* implied wrapper { fee: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n} | {\n    Monthly: /* implied wrapper { fee: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n} | {\n    Yearly: /* implied wrapper { fee: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | ["
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[], [number[] | string, "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": "][]][] | {\n        mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        }[];\n    }[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DredNeighborhood/Neighborhood.typeInfo.ts",
          "releaseTag": "Public",
          "name": "SubscriptionFeeFrequencyLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 33
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~TimeLike_2:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TimeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.bridge.ts",
          "releaseTag": "Public",
          "name": "TimeLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "dred-network-registry!~TimeLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type TimeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/nodeRegistry/NodeRegistry.typeInfo.ts",
          "releaseTag": "Public",
          "name": "TimeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}
